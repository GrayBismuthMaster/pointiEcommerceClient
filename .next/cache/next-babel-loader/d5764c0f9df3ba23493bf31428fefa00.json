{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\MGRN\\\\EcommercePointi\\\\client\\\\pages\\\\nuevoproducto.js\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport router from 'next/router';\nimport { useAddMessage, useMessages } from '../graphql/hooks';\nconst NUEVO_PRODUCTO = gql`\n    mutation nuevoProducto($input : ProductoInput){\n        nuevoProducto(input : $input){\n            id\n            nombre\n            existencia\n            precio\n        }\n    }\n`;\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos{\n        obtenerProductos{\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\nconst NuevoProducto = () => {\n  //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\n  const {\n    addMessage\n  } = useAddMessage(); //Mutation\n\n  const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\n    update(cache, {\n      data: {\n        nuevoProducto\n      }\n    }) {\n      //OBtener objeto de cache\n      const {\n        obtenerProductos\n      } = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      }); //Reescribir cache\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [...obtenerProductos, nuevoProducto]\n        }\n      });\n    }\n\n  }); //Formulario para nuevos productos\n\n  const formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n    }),\n    onSubmit: async valores => {\n      const {\n        nombre,\n        existencia,\n        precio\n      } = valores; //MENSAJE DE NUEVO PRODUCTO AGREGADO\n\n      try {\n        if (window !== undefined) {\n          const producto = await nuevoProducto({\n            variables: {\n              input: {\n                nombre,\n                existencia,\n                precio\n              }\n            }\n          });\n          console.log(\"Producto desde nuevo Producto\", producto);\n\n          if (producto) {\n            const message = await addMessage(`Se agregó el producto ${nombre}`);\n\n            if (message) {\n              Swal.fire('Creado', 'Se creó el producto correctamente', 'success').then(() => {\n                router.push('/productos');\n              });\n            }\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Crear nuevo producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.precio)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Producto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default NuevoProducto;","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/pages/nuevoproducto.js"],"names":["Link","React","Layout","useFormik","Yup","gql","useMutation","Swal","router","useAddMessage","useMessages","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","NuevoProducto","addMessage","nuevoProducto","update","cache","data","obtenerProductos","readQuery","query","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","window","undefined","producto","variables","input","console","log","message","fire","then","push","error","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,GAAR,EAAaC,WAAb,QAA+B,gBAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,kBAA3C;AAEA,MAAMC,cAAc,GAAGN,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAUA,MAAMO,iBAAiB,GAAGP,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMQ,aAAa,GAAG,MAAM;AAExB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,aAAa,EAApC,CAHwB,CAMxB;;AACA,QAAM,CAACM,aAAD,IAAkBT,WAAW,CAACK,cAAD,EAAiB;AAChDK,IAAAA,MAAM,CAACC,KAAD,EAAO;AAACC,MAAAA,IAAI,EAAC;AAACH,QAAAA;AAAD;AAAN,KAAP,EAA8B;AAChC;AACA,YAAM;AAACI,QAAAA;AAAD,UAAqBF,KAAK,CAACG,SAAN,CAAgB;AAACC,QAAAA,KAAK,EAAET;AAAR,OAAhB,CAA3B,CAFgC,CAGhC;;AACAK,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACbD,QAAAA,KAAK,EAAGT,iBADK;AAEbM,QAAAA,IAAI,EAAG;AACHC,UAAAA,gBAAgB,EAAG,CAAC,GAAGA,gBAAJ,EAAuBJ,aAAvB;AADhB;AAFM,OAAjB;AAMH;;AAX+C,GAAjB,CAAnC,CAPwB,CAoBxB;;AACA,QAAMQ,MAAM,GAAGpB,SAAS,CAAC;AACrBqB,IAAAA,aAAa,EAAC;AACVC,MAAAA,MAAM,EAAG,EADC;AAEVC,MAAAA,UAAU,EAAE,EAFF;AAGVC,MAAAA,MAAM,EAAG;AAHC,KADO;AAMrBC,IAAAA,gBAAgB,EAAGxB,GAAG,CAACyB,MAAJ,CAAW;AAC1BJ,MAAAA,MAAM,EAAGrB,GAAG,CAAC0B,MAAJ,GACIC,QADJ,CACa,uCADb,CADiB;AAG1BL,MAAAA,UAAU,EAAGtB,GAAG,CAAC4B,MAAJ,GACID,QADJ,CACa,+BADb,EAEIE,QAFJ,CAEa,iCAFb,EAGIC,OAHJ,CAGY,iCAHZ,CAHa;AAO1BP,MAAAA,MAAM,EAAGvB,GAAG,CAAC4B,MAAJ,GACID,QADJ,CACa,0BADb,EAEIE,QAFJ,CAEa,kCAFb;AAPiB,KAAX,CANE;AAiBrBE,IAAAA,QAAQ,EAAG,MAAMC,OAAN,IAAgB;AACtB,YAAM;AAACX,QAAAA,MAAD;AAASC,QAAAA,UAAT;AAAqBC,QAAAA;AAArB,UAA+BS,OAArC,CADsB,CAEtB;;AAED,UAAG;AACK,YAAGC,MAAM,KAAKC,SAAd,EAAwB;AAExB,gBAAMC,QAAQ,GAAG,MAAMxB,aAAa,CAAC;AACjCyB,YAAAA,SAAS,EAAG;AACRC,cAAAA,KAAK,EAAG;AACJhB,gBAAAA,MADI;AAEJC,gBAAAA,UAFI;AAGJC,gBAAAA;AAHI;AADA;AADqB,WAAD,CAApC;AASAe,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CJ,QAA7C;;AACA,cAAGA,QAAH,EAAY;AAER,kBAAMK,OAAO,GAAG,MAAM9B,UAAU,CAAE,yBAAwBW,MAAO,EAAjC,CAAhC;;AACA,gBAAGmB,OAAH,EAAW;AACPrC,cAAAA,IAAI,CAACsC,IAAL,CACI,QADJ,EAEI,mCAFJ,EAGI,SAHJ,EAIMC,IAJN,CAIW,MAAI;AACPtC,gBAAAA,MAAM,CAACuC,IAAP,CAAY,YAAZ;AACH,eANL;AASH;AACJ;AACA;AACJ,OA7BL,CA+BA,OAAOC,KAAP,EAAa;AACTN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AAGJ;AAzDoB,GAAD,CAAxB;AA2DF,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEQ;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,gDADd;AAEI,IAAA,QAAQ,EAAEzB,MAAM,CAAC0B,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,QAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAE1B,MAAM,CAAC2B,YAPtB;AAQK,IAAA,MAAM,EAAE3B,MAAM,CAAC4B,UARpB;AASK,IAAA,KAAK,EAAI5B,MAAM,CAAC6B,MAAP,CAAc3B,MAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAJJ,EAoBMF,MAAM,CAAC8B,OAAP,CAAe5B,MAAf,IAAyBF,MAAM,CAAC+B,MAAP,CAAc7B,MAAvC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,MAAM,CAAC+B,MAAP,CAAc7B,MAAnB,CAFF,CADN,GAKK,IAzBX,EA2BI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,YAFP;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,WAAW,EAAC,qBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEF,MAAM,CAAC2B,YAPtB;AAQK,IAAA,MAAM,EAAE3B,MAAM,CAAC4B,UARpB;AASK,IAAA,KAAK,EAAI5B,MAAM,CAAC6B,MAAP,CAAc1B,UAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CA3BJ,EA2CMH,MAAM,CAAC8B,OAAP,CAAe3B,UAAf,IAA6BH,MAAM,CAAC+B,MAAP,CAAc5B,UAA3C,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKH,MAAM,CAAC+B,MAAP,CAAc5B,UAAnB,CAFF,CADN,GAKK,IAhDX,EAkDI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,WAAW,EAAC,iBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEH,MAAM,CAAC2B,YAPtB;AAQK,IAAA,MAAM,EAAE3B,MAAM,CAAC4B,UARpB;AASK,IAAA,KAAK,EAAI5B,MAAM,CAAC6B,MAAP,CAAczB,MAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAlDJ,EAkEMJ,MAAM,CAAC8B,OAAP,CAAe1B,MAAf,IAAyBJ,MAAM,CAAC+B,MAAP,CAAc3B,MAAvC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKJ,MAAM,CAAC+B,MAAP,CAAc3B,MAAnB,CAFF,CADN,GAKK,IAvEX,EAyEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,8EAFd;AAGI,IAAA,KAAK,EAAC,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzEJ,CADJ,CADJ,CAFR,CADF;AAwFD,CAxKD;;AA0KA,eAAed,aAAf","sourcesContent":["import Link from 'next/link';\r\nimport React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport Swal from 'sweetalert2'\r\nimport router from 'next/router';\r\nimport { useAddMessage, useMessages } from '../graphql/hooks';\r\n\r\nconst NUEVO_PRODUCTO = gql`\r\n    mutation nuevoProducto($input : ProductoInput){\r\n        nuevoProducto(input : $input){\r\n            id\r\n            nombre\r\n            existencia\r\n            precio\r\n        }\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\n\r\nconst NuevoProducto = () => {\r\n    \r\n    //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n    const { addMessage } = useAddMessage();\r\n    \r\n\r\n    //Mutation\r\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\r\n        update(cache,{data:{nuevoProducto}}){\r\n            //OBtener objeto de cache\r\n            const {obtenerProductos} = cache.readQuery({query: OBTENER_PRODUCTOS});\r\n            //Reescribir cache\r\n            cache.writeQuery({\r\n                query : OBTENER_PRODUCTOS,\r\n                data : {\r\n                    obtenerProductos : [...obtenerProductos , nuevoProducto]\r\n                }\r\n            });\r\n        }\r\n    });\r\n    //Formulario para nuevos productos\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre : '',\r\n            existencia: '',\r\n            precio : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre : Yup.string()\r\n                        .required('El nombre del producto es obligatorio'),\r\n            existencia : Yup.number()\r\n                            .required('Agrega la cantidad disponible')\r\n                            .positive('No se aceptan números negativos')\r\n                            .integer('La existencia deben ser enteros'),\r\n            precio : Yup.number()\r\n                        .required('El precio es obligatorio')\r\n                        .positive(' Los números deben ser positivos')\r\n        }),\r\n        onSubmit : async valores =>{\r\n             const {nombre, existencia, precio} = valores;\r\n             //MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n            \r\n            try{\r\n                    if(window !== undefined){\r\n                        \r\n                    const producto = await nuevoProducto({\r\n                        variables : {\r\n                            input : {\r\n                                nombre,\r\n                                existencia, \r\n                                precio\r\n                            }\r\n                        }\r\n                    })\r\n                    console.log(\"Producto desde nuevo Producto\", producto);\r\n                    if(producto){\r\n                        \r\n                        const message = await addMessage(`Se agregó el producto ${nombre}`);\r\n                        if(message){   \r\n                            Swal.fire(\r\n                                'Creado',\r\n                                'Se creó el producto correctamente',\r\n                                'success',\r\n                                ).then(()=>{\r\n                                    router.push('/productos');\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    }\r\n                    } \r\n                }\r\n                \r\n            catch (error){\r\n                console.log(error)\r\n            }  \r\n            \r\n            \r\n        }\r\n    })\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light \">Crear nuevo producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Cantidad Disponible\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"existencia\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Cantidad Disponible\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.existencia}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.existencia && formik.errors.existencia ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.existencia}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio Producto\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.precio}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.precio}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Agregar Producto\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoProducto"]},"metadata":{},"sourceType":"module"}