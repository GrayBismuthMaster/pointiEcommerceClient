{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerPedidosVendedor { \\n        obtenerPedidosVendedor{\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation eliminarPedido($id : ID!){\\n        eliminarPedido(id:$id)\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation actualizarPedido($id : ID!, $input : PedidoInput){\\n        actualizarPedido(id : $id, input : $input){\\n            estado \\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nvar ACTUALIZAR_PEDIDO = gql(_templateObject());\nvar ELIMINAR_PEDIDO = gql(_templateObject2());\nvar OBTENER_PEDIDOS = gql(_templateObject3());\n\nvar Pedido = function Pedido(_ref) {\n  var pedido = _ref.pedido;\n  console.log(pedido);\n  var id = pedido.id,\n      total = pedido.total,\n      _pedido$cliente = pedido.cliente,\n      nombre = _pedido$cliente.nombre,\n      apellido = _pedido$cliente.apellido,\n      telefono = _pedido$cliente.telefono,\n      email = _pedido$cliente.email,\n      cliente = pedido.cliente,\n      estado = pedido.estado;\n\n  var _useMutation = useMutation(ACTUALIZAR_PEDIDO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarPedido = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ELIMINAR_PEDIDO, {\n    update: function update(cache) {\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(function (pedido) {\n            return pedido.id !== id;\n          })\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      eliminarPedido = _useMutation4[0];\n\n  var _useState = useState(estado),\n      estadoPedido = _useState[0],\n      setEstadoPedido = _useState[1];\n\n  var _useState2 = useState(''),\n      clase = _useState2[0],\n      setClase = _useState2[1];\n\n  useEffect(function () {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]); //Funcion que modifica el color del pedido por su estado\n\n  var clasePedido = function clasePedido() {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    } else if (estadoPedido === 'COMPLETADO') {\n      setClase('border-green-500');\n    } else {\n      setClase('border-red-800');\n    }\n  };\n\n  var cambiarEstadoPedido = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(nuevoEstado) {\n      var _yield$actualizarPedi, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return actualizarPedido({\n                variables: {\n                  id: id,\n                  input: {\n                    estado: nuevoEstado,\n                    cliente: cliente.id\n                  }\n                }\n              });\n\n            case 3:\n              _yield$actualizarPedi = _context.sent;\n              data = _yield$actualizarPedi.data;\n              setEstadoPedido(data.actualizarPedido.estado);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function cambiarEstadoPedido(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var confirmarEliminarPedido = function confirmarEliminarPedido() {\n    Swal.fire({\n      title: \"\\xBFEst\\xE1s seguro de eliminar el pedido?\",\n      text: \"No se podrá deshacer esta acción\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, bórralo!',\n      cancelButtonText: 'No, cancélalo'\n    }).then( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(result) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!result.value) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return eliminarPedido({\n                  variables: {\n                    id: id\n                  }\n                });\n\n              case 4:\n                data = _context2.sent;\n                Swal.fire(\"Eliminado\", data.eliminarPedido, \"success\");\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  };\n\n  return __jsx(\"div\", {\n    className: \"\".concat(clase, \" border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg'\")\n  }, __jsx(\"div\", null, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\"\n  }, \"Cliente :  \", nombre, \" \", apellido), email && __jsx(\"p\", {\n    className: \"flex items-center my-2\"\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"h-4 w-4 mr-2\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207\"\n  })), email), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\"\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"h-4 w-4 mr-2\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\"\n  }, \"Estado Pedido : \"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold\",\n    defaultValue: estadoPedido,\n    onChange: function onChange(e) {\n      return cambiarEstadoPedido(e.target.value);\n    }\n  }, __jsx(\"option\", {\n    value: \"COMPLETADO\"\n  }, \"COMPLETADO\"), __jsx(\"option\", {\n    value: \"PENDIENTE\"\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    values: \"CANCELADO\"\n  }, \"CANCELADO\"))), __jsx(\"div\", {\n    className: \"text-gray-800 font-bold mt-2\"\n  }, __jsx(\"h2\", null, \"Resumen del Pedido\"), pedido.pedido.map(function (articulo) {\n    return __jsx(\"div\", {\n      key: articulo.id,\n      className: \"mt-4\"\n    }, __jsx(\"p\", {\n      className: \"text-sm text-gray-600 font-light\"\n    }, \"Producto: \", articulo.nombre), __jsx(\"p\", {\n      className: \"text-sm text-gray-600 font-light\"\n    }, \"Cantidad: \", articulo.cantidad));\n  }), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold\"\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\"\n  }, \"$ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: confirmarEliminarPedido\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    className: \"w-4 h-4 ml-2\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n  })))));\n};\n\nexport default Pedido;","map":null,"metadata":{},"sourceType":"module"}