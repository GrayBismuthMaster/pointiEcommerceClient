{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\Javascript\\\\MGRN\\\\EcommercePointi\\\\client\\\\pages\\\\nuevoproducto.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport router from 'next/router';\nimport { useAddMessage, useMessages } from '../graphql/hooks';\nimport { useS3Upload } from '../hooks/useS3Upload';\nconst NUEVO_PRODUCTO = gql`\n    mutation nuevoProducto($input : ProductoInput){\n        nuevoProducto(input : $input){\n            id\n            nombre\n            existencia\n            precio\n        }\n    }\n`;\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos{\n        obtenerProductos{\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\nconst S3UPLOAD = gql`\n  mutation($filename: String!, $filetype: String!) {\n    signS3(filename: $filename, filetype: $filetype) {\n      url\n      signedRequest\n    }\n  }\n`;\n\nconst NuevoProducto = () => {\n  //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\n  const {\n    addMessage\n  } = useAddMessage(); //CAMBIO DE SOMBRA PARA DRAG AND DROP\n\n  const {\n    0: classStateBG,\n    1: setClassStateBG\n  } = useState(false); //CUSTOM HOOK PARA S3 UPLOAD\n\n  const {\n    s3State,\n    setS3State,\n    formatFilename,\n    uploadToS3\n  } = useS3Upload(); //mutation\n\n  const [signS3] = useMutation(S3UPLOAD); //ESTADOS DE IMAGENES SUBIDAS\n\n  const {\n    0: uploadedImages,\n    1: setUploadedImages\n  } = useState([]); //Mutation\n\n  const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\n    update(cache, {\n      data: {\n        nuevoProducto\n      }\n    }) {\n      //OBtener objeto de cache\n      const {\n        obtenerProductos\n      } = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      });\n      console.log(\"Obtener productos desde update\", obtenerProductos); //Reescribir cache\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [...obtenerProductos, nuevoProducto]\n        }\n      });\n    }\n\n  }); //Formulario para nuevos productos\n\n  const formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n    }),\n    onSubmit: async valores => {\n      const {\n        nombre,\n        existencia,\n        precio\n      } = valores;\n\n      if (window !== undefined) {\n        //UPLOAD FILE \n        const response = await signS3({\n          variables: {\n            filename: formatFilename(s3State.file.name),\n            filetype: s3State.file.type\n          }\n        });\n        const {\n          signedRequest,\n          url\n        } = response.data.signS3;\n        const resUpload = await uploadToS3(s3State.file, signedRequest);\n        console.log(\"RESPUESTA DE S3\", resUpload, \"URL\", url); //END UPLOAD FILE \n\n        if (url) {\n          await addMessage(`Se agregó el producto ${nombre}`);\n\n          try {\n            //MENSAJE DE NUEVO PRODUCTO AGREGADO\n            const producto = await nuevoProducto({\n              variables: {\n                input: {\n                  nombre,\n                  existencia,\n                  precio\n                }\n              }\n            });\n            console.log(\"Producto desde nuevo Producto\", producto);\n            Swal.fire('Creado', 'Se creó el producto correctamente', 'success').then(async () => {\n              await router.push('/productos');\n            });\n          } catch (error) {\n            console.log(error);\n          }\n        } // const message = await addMessage(`Se agregó el producto ${nombre}`);\n        // console.log(\"Mensaje desde onSubmit\", message);\n\n      }\n    }\n  }); //EVENTOS PARA EL UPLOAD DE LOS ARCHIVOS\n  //ESTADO DE LA LISTA DE IMAGENES\n\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]); //REFERENCIA\n\n  const wrapperRef = useRef(null);\n\n  const handleDragEnter = e => {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n\n    wrapperRef.current.classList.add('bg-black-800'); // console.log(\"Drageado encima\");\n  };\n\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n    // wrapperRef.current.classList.remove('bg-black-800')\n    // console.log(\"Deja\");\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n    // wrapperRef.current.classList.add(\"bg-black-800\")\n\n    setClassStateBG(true); // console.log(\"Deja\");\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n    // wrapperRef.current.classList.remove('bg-black-800')\n\n    console.log(e.dataTransfer);\n    let newFile = e.dataTransfer.files[0];\n    setS3State(_objectSpread(_objectSpread({}, s3State), {}, {\n      file: newFile,\n      name: newFile.name\n    }));\n    formik.setFieldValue(\"file\", newFile);\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList); // onFileChange(updatedList);\n    }\n\n    setClassStateBG(false);\n    setUploadedImages([...uploadedImages, {\n      name: newFile.name\n    }]);\n  };\n\n  const onFileDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(\"Se dejo aca\");\n    const newFile = e.target.files[0];\n    setS3State(_objectSpread(_objectSpread({}, s3State), {}, {\n      file: newFile,\n      name: newFile.name\n    }));\n    formik.setFieldValue(\"file\", newFile);\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList); // onFileChange(updatedList);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, \"Crear nuevo producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    onDragEnter: e => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDrag: e => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDragEnd: e => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDragLeave: e => {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.precio)) : null, __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full\",\n    onChange: onFileDrop,\n    ref: wrapperRef,\n    onDragEnter: e => handleDragEnter(e),\n    onDragOver: e => handleDragOver(e),\n    onDragLeave: e => handleDragLeave(e),\n    onDrop: e => handleDrop(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dropzone-file\",\n    className: classStateBG ? \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 bg-gray-800\" : \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center pt-5 pb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }, __jsx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    className: \"mb-3 w-10 h-10 text-gray-400\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 191\n    }\n  })), __jsx(\"p\", {\n    className: \"mb-2 text-sm text-gray-500 dark:text-gray-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 37\n    }\n  }, __jsx(\"span\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 98\n    }\n  }, \"Click to upload\"), \" or drag and drop\"), __jsx(\"p\", {\n    className: \"text-xs text-gray-500 dark:text-gray-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 37\n    }\n  }, \"SVG, PNG, JPG or GIF (MAX. 800x400px)\")), __jsx(\"input\", {\n    id: \"dropzone-file\",\n    type: \"file\",\n    className: \"hidden\",\n    onChange: onFileDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }))), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Producto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, uploadedImages.map(image => {\n    return __jsx(React.Fragment, null, image.name);\n  })))));\n};\n\nexport default NuevoProducto;","map":{"version":3,"sources":["D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/pages/nuevoproducto.js"],"names":["Link","React","useEffect","useRef","useState","Layout","useFormik","Yup","gql","useMutation","Swal","router","useAddMessage","useMessages","useS3Upload","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","S3UPLOAD","NuevoProducto","addMessage","classStateBG","setClassStateBG","s3State","setS3State","formatFilename","uploadToS3","signS3","uploadedImages","setUploadedImages","nuevoProducto","update","cache","data","obtenerProductos","readQuery","query","console","log","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","window","undefined","response","variables","filename","file","name","filetype","type","signedRequest","url","resUpload","producto","input","fire","then","push","error","fileList","setFileList","wrapperRef","handleDragEnter","e","preventDefault","stopPropagation","current","classList","add","handleDragLeave","handleDragOver","handleDrop","dataTransfer","newFile","files","setFieldValue","updatedList","onFileDrop","target","handleSubmit","handleChange","handleBlur","values","touched","errors","map","image"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport Swal from 'sweetalert2'\r\nimport router from 'next/router';\r\nimport { useAddMessage, useMessages } from '../graphql/hooks';\r\nimport { useS3Upload } from '../hooks/useS3Upload';\r\n\r\nconst NUEVO_PRODUCTO = gql`\r\n    mutation nuevoProducto($input : ProductoInput){\r\n        nuevoProducto(input : $input){\r\n            id\r\n            nombre\r\n            existencia\r\n            precio\r\n        }\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\nconst S3UPLOAD = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nconst NuevoProducto = () => {\r\n    \r\n\r\n    //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n    const { addMessage } = useAddMessage();\r\n    //CAMBIO DE SOMBRA PARA DRAG AND DROP\r\n    const [classStateBG, setClassStateBG] = useState(false);\r\n    \r\n    //CUSTOM HOOK PARA S3 UPLOAD\r\n    const { s3State, setS3State, formatFilename, uploadToS3} = useS3Upload();\r\n        //mutation\r\n        const [signS3] = useMutation(S3UPLOAD);\r\n\r\n    //ESTADOS DE IMAGENES SUBIDAS\r\n    const [uploadedImages, setUploadedImages] = useState([]);\r\n\r\n    //Mutation\r\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\r\n        update(cache,{data:{nuevoProducto}}){\r\n            //OBtener objeto de cache\r\n            const {obtenerProductos} = cache.readQuery({query: OBTENER_PRODUCTOS});\r\n            console.log(\"Obtener productos desde update\", obtenerProductos);\r\n            \r\n            \r\n            //Reescribir cache\r\n            cache.writeQuery({\r\n                query : OBTENER_PRODUCTOS,\r\n                data : {\r\n                    obtenerProductos : [...obtenerProductos , nuevoProducto]\r\n                }\r\n            });\r\n        }\r\n    });\r\n    //Formulario para nuevos productos\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre : '',\r\n            existencia: '',\r\n            precio : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre : Yup.string()\r\n                        .required('El nombre del producto es obligatorio'),\r\n            existencia : Yup.number()\r\n                            .required('Agrega la cantidad disponible')\r\n                            .positive('No se aceptan números negativos')\r\n                            .integer('La existencia deben ser enteros'),\r\n            precio : Yup.number()\r\n                        .required('El precio es obligatorio')\r\n                        .positive(' Los números deben ser positivos')\r\n        }),\r\n        onSubmit : async valores =>{\r\n             const {nombre, existencia, precio} = valores;\r\n             \r\n             if(window !== undefined){\r\n\r\n                //UPLOAD FILE \r\n                \r\n                const response = await signS3({\r\n                    variables: {\r\n                        filename: formatFilename(s3State.file.name),\r\n                        filetype: s3State.file.type\r\n                    }\r\n                });\r\n\r\n                const { signedRequest, url } = response.data.signS3;\r\n                const resUpload = await uploadToS3(s3State.file, signedRequest);\r\n\r\n                console.log(\"RESPUESTA DE S3\", resUpload, \"URL\", url);\r\n                //END UPLOAD FILE \r\n                if(url){\r\n                    await addMessage(`Se agregó el producto ${nombre}`);\r\n                    try{\r\n                        \r\n                        //MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n                        const producto = await nuevoProducto({\r\n                            variables : {\r\n                                input : {\r\n                                    nombre,\r\n                                    existencia, \r\n                                    precio\r\n                                }\r\n                            }\r\n                        })\r\n                        console.log(\"Producto desde nuevo Producto\", producto);\r\n                        \r\n                        Swal.fire(\r\n                            'Creado',\r\n                            'Se creó el producto correctamente',\r\n                            'success',\r\n                            ).then(async ()=>{\r\n                                await router.push('/productos');\r\n\r\n                            }\r\n        \r\n                        )\r\n                            \r\n                }\r\n                catch (error){\r\n                    console.log(error)\r\n                } \r\n                }\r\n                \r\n               // const message = await addMessage(`Se agregó el producto ${nombre}`);\r\n               // console.log(\"Mensaje desde onSubmit\", message);\r\n               \r\n             }\r\n\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n    })\r\n\r\n    //EVENTOS PARA EL UPLOAD DE LOS ARCHIVOS\r\n        //ESTADO DE LA LISTA DE IMAGENES\r\n        const [fileList, setFileList] = useState([]);\r\n\r\n        //REFERENCIA\r\n        const wrapperRef = useRef(null);\r\n\r\n    const handleDragEnter = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        wrapperRef.current.classList.add('bg-black-800')\r\n        // console.log(\"Drageado encima\");\r\n    };\r\n\r\n    const handleDragLeave = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        // wrapperRef.current.classList.remove('bg-black-800')\r\n        // console.log(\"Deja\");\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        // wrapperRef.current.classList.add(\"bg-black-800\")\r\n        setClassStateBG(true);\r\n        // console.log(\"Deja\");\r\n    };\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        // wrapperRef.current.classList.remove('bg-black-800')\r\n        console.log(e.dataTransfer)\r\n        let newFile = e.dataTransfer.files[0];\r\n        setS3State({...s3State, file : newFile, name : newFile.name});\r\n\r\n        formik.setFieldValue(\"file\", newFile);\r\n\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            // onFileChange(updatedList);\r\n        }\r\n        setClassStateBG(false);\r\n        setUploadedImages([...uploadedImages, {name : newFile.name}])\r\n    };\r\n\r\n    const onFileDrop = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(\"Se dejo aca\");\r\n        const newFile = e.target.files[0];\r\n        setS3State({...s3State, file : newFile, name : newFile.name});\r\n        formik.setFieldValue(\"file\", newFile);\r\n\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            // onFileChange(updatedList);\r\n        }\r\n    }\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light \">Crear nuevo producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                        onDragEnter={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                        onDrag={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                        onDragEnd={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                        onDragLeave={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Cantidad Disponible\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"existencia\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Cantidad Disponible\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.existencia}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.existencia && formik.errors.existencia ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.existencia}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio Producto\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.precio}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.precio}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"flex justify-center items-center w-full\" onChange={onFileDrop} ref={wrapperRef} onDragEnter={(e)=>handleDragEnter(e)} onDragOver={(e)=>handleDragOver(e)} onDragLeave={(e)=>handleDragLeave(e)} onDrop={(e)=>handleDrop(e)} >\r\n                         \r\n                            <label htmlFor=\"dropzone-file\" className={classStateBG ? \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 bg-gray-800\" : \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\"} >\r\n                                <div className=\"flex flex-col justify-center items-center pt-5 pb-6\">\r\n                                    <svg aria-hidden=\"true\" className=\"mb-3 w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg>\r\n                                    <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\"><span className=\"font-semibold\">Click to upload</span> or drag and drop</p>\r\n                                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>\r\n                                </div>\r\n                                <input id=\"dropzone-file\" type=\"file\" className=\"hidden\" onChange={onFileDrop}  />\r\n                           \r\n                            </label>\r\n                        </div> \r\n\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Agregar Producto\"\r\n                        />\r\n                    </form>\r\n                    <div>\r\n                        {uploadedImages.map((image)=>{\r\n                            return (\r\n                                <>\r\n                                    {image.name}\r\n                                </>       \r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoProducto"]},"metadata":{},"sourceType":"module"}