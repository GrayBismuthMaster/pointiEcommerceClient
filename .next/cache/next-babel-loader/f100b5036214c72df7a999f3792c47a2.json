{"ast":null,"code":"import _regeneratorRuntime from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\components\\\\Cliente.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      query obtenerClientesVendedor {\\n        obtenerClientesVendedor{\\n          id\\n          nombre\\n          apellido\\n          empresa\\n          email\\n        }\\n      }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation eliminarCliente($id:ID!){\\n        eliminarCliente(id:$id)\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport { gql, useMutation } from '@apollo/client';\nvar ELIMINAR_CLIENTE = gql(_templateObject());\nvar OBTENER_CLIENTES_USUARIO = gql(_templateObject2());\n\nvar Cliente = function Cliente(_ref) {\n  _s();\n\n  var cliente = _ref.cliente;\n\n  //Mutation para eliminar cliente\n  var _useMutation = useMutation(ELIMINAR_CLIENTE, {\n    update: function update(cache) {\n      //Obtener una copia del objeto de cache\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_CLIENTES_USUARIO\n      }),\n          obtenerClientesVendedor = _cache$readQuery.obtenerClientesVendedor; //Reescribir el caché \n\n\n      cache.writeQuery({\n        query: OBTENER_CLIENTES_USUARIO\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      eliminarCliente = _useMutation2[0]; //Destructuración cliente\n\n\n  var nombre = cliente.nombre,\n      apellido = cliente.apellido,\n      empresa = cliente.empresa,\n      email = cliente.email,\n      id = cliente.id; //Elimina un cliente\n\n  var confirmarEliminarCliente = function confirmarEliminarCliente(id) {\n    Swal.fire({\n      title: \"\\xBFEst\\xE1s seguro de eliminar a \".concat(nombre, \"?\"),\n      text: \"No se podrá deshacer esta acción\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, bórralo!',\n      cancelButtonText: 'No, cancélalo'\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(result) {\n        var _yield$eliminarClient, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!result.isConfirmed) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return eliminarCliente({\n                  variables: {\n                    id: id\n                  }\n                });\n\n              case 4:\n                _yield$eliminarClient = _context.sent;\n                data = _yield$eliminarClient.data;\n                console.log(data); //Mostrar una alerta\n\n                Swal.fire('ELiminado!', data.eliminarCliente, 'success');\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  return __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, nombre, \" \", apellido), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, empresa), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, email), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-red-800 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: function onClick() {\n      return confirmarEliminarCliente(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Eliminar\", __jsx(\"svg\", {\n    className: \"w-4 h-4 ml-2\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 140\n    }\n  })))));\n};\n\n_s(Cliente, \"GX8l4rtBCcY9BsMpP0wHe8+i8tw=\", false, function () {\n  return [useMutation];\n});\n\n_c = Cliente;\nexport default Cliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cliente\");","map":{"version":3,"sources":["D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/components/Cliente.js"],"names":["React","Swal","gql","useMutation","ELIMINAR_CLIENTE","OBTENER_CLIENTES_USUARIO","Cliente","cliente","update","cache","readQuery","query","obtenerClientesVendedor","writeQuery","eliminarCliente","nombre","apellido","empresa","email","id","confirmarEliminarCliente","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","variables","data","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport {gql, useMutation} from '@apollo/client'\r\n\r\nconst ELIMINAR_CLIENTE = gql`\r\n    mutation eliminarCliente($id:ID!){\r\n        eliminarCliente(id:$id)\r\n    }\r\n`;\r\nconst OBTENER_CLIENTES_USUARIO = gql`\r\n      query obtenerClientesVendedor {\r\n        obtenerClientesVendedor{\r\n          id\r\n          nombre\r\n          apellido\r\n          empresa\r\n          email\r\n        }\r\n      }\r\n`;\r\nconst Cliente = ({cliente}) => {\r\n    //Mutation para eliminar cliente\r\n    const [eliminarCliente] = useMutation(ELIMINAR_CLIENTE, {\r\n        update(cache){\r\n            //Obtener una copia del objeto de cache\r\n            const {obtenerClientesVendedor} = cache.readQuery({query:OBTENER_CLIENTES_USUARIO})\r\n            \r\n            //Reescribir el caché \r\n            cache.writeQuery({\r\n                query: OBTENER_CLIENTES_USUARIO\r\n            })\r\n        }\r\n    })\r\n    //Destructuración cliente\r\n    const{nombre,apellido, empresa, email, id} = cliente;\r\n    //Elimina un cliente\r\n    const confirmarEliminarCliente = id => {\r\n       \r\n        Swal.fire({\r\n            title: `¿Estás seguro de eliminar a ${nombre}?`,\r\n            text: \"No se podrá deshacer esta acción\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, bórralo!',\r\n            cancelButtonText:'No, cancélalo'\r\n          }).then(async (result) => {\r\n            if (result.isConfirmed) \r\n            {\r\n                try {\r\n                    //Eliminar por id \r\n                    //Data es la respuesta del servidor\r\n                    const{data} = await eliminarCliente({\r\n                        variables:{\r\n                            id \r\n                        }\r\n                    })\r\n                    console.log(data)\r\n                    //Mostrar una alerta\r\n                    Swal.fire(\r\n                        'ELiminado!',\r\n                        data.eliminarCliente,\r\n                        'success'\r\n                    )   \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n          })\r\n    }\r\n    \r\n    \r\n    return ( \r\n        <tr>\r\n            <td className='border px-4 py-2'>{nombre} {apellido}</td>\r\n            <td className='border px-4 py-2'>{empresa}</td>\r\n            <td className='border px-4 py-2'>{email}</td>\r\n            <td className='border px-4 py-2'>\r\n                <button type=\"button\"\r\n                    className=\"flex justify-center items-center bg-red-800 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\"\r\n                    onClick = {()=>confirmarEliminarCliente(id)}\r\n                >\r\n                    Eliminar\r\n                    <svg className=\"w-4 h-4 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\r\n                    \r\n                </button>\r\n            </td>\r\n        </tr>\r\n     );\r\n}\r\n \r\nexport default Cliente;"]},"metadata":{},"sourceType":"module"}