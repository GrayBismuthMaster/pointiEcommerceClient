{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\components\\\\pedidos\\\\AsignarCliente.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\n\nvar AsignarCliente = function AsignarCliente() {\n  _s();\n\n  var _useState = useState([]),\n      clientes = _useState[0],\n      setClientes = _useState[1];\n\n  var options = [{\n    id: \"jeje\",\n    nombre: \"sapo\"\n  }, {\n    id: \"jqwq\",\n    nombre: \"pollo\"\n  }, {\n    id: \"sdfsdf\",\n    nombre: \"asdasd\"\n  }];\n  useEffect(function () {\n    console.log(clientes);\n    return function () {};\n  }, [clientes]);\n\n  var seleccionarCliente = function seleccionarCliente(clientes) {\n    setClientes(clientes);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"1.- Asigna un cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: options,\n    isMulti: true,\n    onChange: function onChange(option) {\n      return seleccionarCliente(option);\n    },\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return opciones.nombre;\n    },\n    placeholder: 'Seleccione el cliente',\n    noOptionsMessage: \"NO hay ese cliente\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AsignarCliente, \"HULfgVUvabrDmHl/V3upbLnD830=\");\n\n_c = AsignarCliente;\nexport default AsignarCliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignarCliente\");","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/components/pedidos/AsignarCliente.js"],"names":["React","useEffect","useState","Select","AsignarCliente","clientes","setClientes","options","id","nombre","console","log","seleccionarCliente","option","opciones"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,kBACKF,QAAQ,CAAC,EAAD,CADb;AAAA,MACpBG,QADoB;AAAA,MACVC,WADU;;AAE3B,MAAMC,OAAO,GAAG,CACZ;AAACC,IAAAA,EAAE,EAAG,MAAN;AAAcC,IAAAA,MAAM,EAAG;AAAvB,GADY,EAGZ;AAACD,IAAAA,EAAE,EAAG,MAAN;AAAcC,IAAAA,MAAM,EAAG;AAAvB,GAHY,EAKZ;AAACD,IAAAA,EAAE,EAAG,QAAN;AAAgBC,IAAAA,MAAM,EAAI;AAA1B,GALY,CAAhB;AASAR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEF,WAAO,YAAM,CAEZ,CAFD;AAGD,GANU,EAMR,CAACA,QAAD,CANQ,CAAT;;AAQF,MAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAP,QAAQ,EAAI;AACnCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAFD;;AAGE,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,MAAC,MAAD;AACM,IAAA,SAAS,EAAC,MADhB;AAEM,IAAA,OAAO,EAAIE,OAFjB;AAGM,IAAA,OAAO,MAHb;AAIM,IAAA,QAAQ,EAAE,kBAACM,MAAD;AAAA,aAAUD,kBAAkB,CAACC,MAAD,CAA5B;AAAA,KAJhB;AAKM,IAAA,cAAc,EAAI,wBAACC,QAAD;AAAA,aAAYA,QAAQ,CAACN,EAArB;AAAA,KALxB;AAMM,IAAA,cAAc,EAAI,wBAACM,QAAD;AAAA,aAAYA,QAAQ,CAACL,MAArB;AAAA,KANxB;AAOM,IAAA,WAAW,EAAI,uBAPrB;AAQM,IAAA,gBAAgB,EAAI,oBAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAgBD,CAtCD;;GAAML,c;;KAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Select from 'react-select'\r\nconst AsignarCliente = () => {\r\n  const [clientes, setClientes] = useState([]);\r\n  const options = [\r\n      {id : \"jeje\", nombre : \"sapo\"},\r\n      \r\n      {id : \"jqwq\", nombre : \"pollo\"},\r\n      \r\n      {id : \"sdfsdf\", nombre :  \"asdasd\"}\r\n  ]\r\n\r\n  \r\n  useEffect(() => {\r\n    console.log(clientes);\r\n\r\n  return () => {\r\n    \r\n  }\r\n}, [clientes])\r\n\r\nconst seleccionarCliente = clientes => {\r\n    setClientes(clientes);\r\n}\r\n  return (\r\n    <>\r\n      <p className='mt-10 my-2'>1.- Asigna un cliente al pedido</p>\r\n      <Select\r\n            className='mt-3'\r\n            options = {options}\r\n            isMulti\r\n            onChange={(option)=>seleccionarCliente(option)}\r\n            getOptionValue = {(opciones)=>opciones.id}\r\n            getOptionLabel = {(opciones)=>opciones.nombre}\r\n            placeholder = {'Seleccione el cliente'}\r\n            noOptionsMessage = {\"NO hay ese cliente\"}\r\n      />\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default AsignarCliente"]},"metadata":{},"sourceType":"module"}