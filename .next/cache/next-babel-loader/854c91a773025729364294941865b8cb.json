{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerPedidosVendedor{\\n        obtenerPedidosVendedor{\\n            id\\n            pedido{\\n                id\\n                nombre\\n                cantidad\\n            }\\n            cliente{\\n                id\\n                nombre\\n                apellido\\n                email\\n                telefono\\n            }\\n            vendedor\\n            total\\n            estado\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoPedido($input : PedidoInput){\\n      nuevoPedido(input : $input){\\n        id\\n      }\\n    }    \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport AsignarCliente from '../components/pedidos/AsignarCliente';\nimport AsignarProductos from '../components/pedidos/AsignarProductos';\nimport ResumenPedido from '../components/pedidos/ResumenPedido';\nimport Total from '../components/pedidos/Total';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Swal from 'sweetalert2'; //Context de Pedidos\n\nimport PedidoContext from '../context/pedidos/PedidoContext';\nvar NUEVO_PEDIDO = gql(_templateObject());\nvar OBTENER_PEDIDOS = gql(_templateObject2());\n\nvar NuevoPedido = function NuevoPedido() {\n  var router = useRouter();\n\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      setMensaje = _useState[1]; //Utilizar context y extraer sus funciones\n\n\n  var pedidoContext = useContext(PedidoContext);\n  var cliente = pedidoContext.cliente,\n      productos = pedidoContext.productos,\n      total = pedidoContext.total;\n  var id = cliente.id; //Mutation para nuevo Pedido\n\n  var _useMutation = useMutation(NUEVO_PEDIDO, {\n    update: function update(cache, _ref) {\n      var nuevoPedido = _ref.data.nuevoPedido;\n\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [].concat(_toConsumableArray(obtenerPedidosVendedor), [nuevoPedido])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoPedido = _useMutation2[0];\n\n  var validarPedido = function validarPedido() {\n    return !productos.every(function (producto) {\n      return producto.cantidad > 0;\n    }) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed\" : \"\";\n  };\n\n  var crearNuevoPedido = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var pedido, _yield$nuevoPedido, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //Remover atributos que no van \n              pedido = productos.map(function (_ref3) {\n                var existencia = _ref3.existencia,\n                    __typename = _ref3.__typename,\n                    producto = _objectWithoutProperties(_ref3, [\"existencia\", \"__typename\"]);\n\n                return producto;\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return nuevoPedido({\n                variables: {\n                  input: {\n                    cliente: id,\n                    total: total,\n                    pedido: pedido\n                  }\n                }\n              });\n\n            case 4:\n              _yield$nuevoPedido = _context.sent;\n              data = _yield$nuevoPedido.data;\n              //redireccionar\n              router.push('/pedidos');\n              Swal.fire(\"Correcto\", \"El pedido se registr√≥ correctamente\", \"success\");\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              setMensaje(_context.t0.message.replace('Error : ', ''));\n              setTimeout(function () {\n                setMensaje(null);\n              }, 3000);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function crearNuevoPedido() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\"\n    }, __jsx(\"p\", null, mensaje));\n  };\n\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\"\n  }), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\"\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\"\n  }, __jsx(AsignarCliente, null), __jsx(AsignarProductos, null), __jsx(ResumenPedido, null), __jsx(Total, null), __jsx(\"button\", {\n    type: \"button\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-700 \".concat(validarPedido()),\n    onClick: crearNuevoPedido\n  }, \"Registrar Pedido\"))));\n};\n\nexport default NuevoPedido;","map":null,"metadata":{},"sourceType":"module"}