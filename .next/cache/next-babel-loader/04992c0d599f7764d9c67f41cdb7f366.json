{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\MGRN\\\\EcommercePointi\\\\client\\\\pages\\\\nuevoproducto.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProductos{\\n        obtenerProductos{\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoProducto($input : ProductoInput){\\n        nuevoProducto(input : $input){\\n            id\\n            nombre\\n            existencia\\n            precio\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport router from 'next/router';\nimport { useAddMessage, useMessages } from '../graphql/hooks';\nvar NUEVO_PRODUCTO = gql(_templateObject());\nvar OBTENER_PRODUCTOS = gql(_templateObject2());\n\nvar NuevoProducto = function NuevoProducto() {\n  _s();\n\n  //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\n  var _useAddMessage = useAddMessage(),\n      addMessage = _useAddMessage.addMessage; //Mutation\n\n\n  var _useMutation = useMutation(NUEVO_PRODUCTO, {\n    update: function update(cache, _ref) {\n      var nuevoProducto = _ref.data.nuevoProducto;\n\n      //OBtener objeto de cache\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      }),\n          obtenerProductos = _cache$readQuery.obtenerProductos;\n\n      console.log(\"Obtener productos desde update\", obtenerProductos); //Reescribir cache\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [].concat(_toConsumableArray(obtenerProductos), [nuevoProducto])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoProducto = _useMutation2[0]; //Formulario para nuevos productos\n\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(valores) {\n        var nombre, existencia, precio, producto;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n\n                if (!(window !== undefined)) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 4;\n                return addMessage(\"Se agreg\\xF3 el producto \".concat(nombre));\n\n              case 4:\n                _context2.prev = 4;\n                _context2.next = 7;\n                return nuevoProducto({\n                  variables: {\n                    input: {\n                      nombre: nombre,\n                      existencia: existencia,\n                      precio: precio\n                    }\n                  }\n                });\n\n              case 7:\n                producto = _context2.sent;\n                console.log(\"Producto desde nuevo Producto\", producto);\n                Swal.fire('Creado', 'Se creó el producto correctamente', 'success').then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return router.push('/productos');\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })));\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.log(_context2.t0);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 12]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Crear nuevo producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.precio)) : null, __jsx(\"div\", {\n    \"class\": \"flex justify-center items-center w-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    \"for\": \"dropzone-file\",\n    \"class\": \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"flex flex-col justify-center items-center pt-5 pb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, __jsx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    \"class\": \"mb-3 w-10 h-10 text-gray-400\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, __jsx(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 187\n    }\n  })), __jsx(\"p\", {\n    \"class\": \"mb-2 text-sm text-gray-500 dark:text-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, __jsx(\"span\", {\n    \"class\": \"font-semibold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 94\n    }\n  }, \"Click to upload\"), \" or drag and drop\"), __jsx(\"p\", {\n    \"class\": \"text-xs text-gray-500 dark:text-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, \"SVG, PNG, JPG or GIF (MAX. 800x400px)\")), __jsx(\"input\", {\n    id: \"dropzone-file\",\n    type: \"file\",\n    \"class\": \"hidden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }))), __jsx(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    onChange: function onChange(event) {\n      formik.setFieldValue(\"file\", event.currentTarget.files[0]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(NuevoProducto, \"SmLRQ6BtoHdugaFkP2ZAJx14U8I=\", false, function () {\n  return [useAddMessage, useMutation, useFormik];\n});\n\n_c = NuevoProducto;\nexport default NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/pages/nuevoproducto.js"],"names":["Link","React","Layout","useFormik","Yup","gql","useMutation","Swal","router","useAddMessage","useMessages","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","NuevoProducto","addMessage","update","cache","nuevoProducto","data","readQuery","query","obtenerProductos","console","log","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","window","undefined","variables","input","producto","fire","then","push","handleSubmit","handleChange","handleBlur","values","touched","errors","event","setFieldValue","currentTarget","files"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport Swal from 'sweetalert2'\r\nimport router from 'next/router';\r\nimport { useAddMessage, useMessages } from '../graphql/hooks';\r\n\r\nconst NUEVO_PRODUCTO = gql`\r\n    mutation nuevoProducto($input : ProductoInput){\r\n        nuevoProducto(input : $input){\r\n            id\r\n            nombre\r\n            existencia\r\n            precio\r\n        }\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\n\r\nconst NuevoProducto = () => {\r\n    \r\n    //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n    const { addMessage } = useAddMessage();\r\n    \r\n\r\n    //Mutation\r\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\r\n        update(cache,{data:{nuevoProducto}}){\r\n            //OBtener objeto de cache\r\n            const {obtenerProductos} = cache.readQuery({query: OBTENER_PRODUCTOS});\r\n            console.log(\"Obtener productos desde update\", obtenerProductos);\r\n            \r\n            \r\n            //Reescribir cache\r\n            cache.writeQuery({\r\n                query : OBTENER_PRODUCTOS,\r\n                data : {\r\n                    obtenerProductos : [...obtenerProductos , nuevoProducto]\r\n                }\r\n            });\r\n        }\r\n    });\r\n    //Formulario para nuevos productos\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre : '',\r\n            existencia: '',\r\n            precio : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre : Yup.string()\r\n                        .required('El nombre del producto es obligatorio'),\r\n            existencia : Yup.number()\r\n                            .required('Agrega la cantidad disponible')\r\n                            .positive('No se aceptan números negativos')\r\n                            .integer('La existencia deben ser enteros'),\r\n            precio : Yup.number()\r\n                        .required('El precio es obligatorio')\r\n                        .positive(' Los números deben ser positivos')\r\n        }),\r\n        onSubmit : async valores =>{\r\n             const {nombre, existencia, precio} = valores;\r\n             \r\n             if(window !== undefined){\r\n                await addMessage(`Se agregó el producto ${nombre}`);\r\n                // const message = await addMessage(`Se agregó el producto ${nombre}`);\r\n                // console.log(\"Mensaje desde onSubmit\", message);\r\n                // if(message.id !== undefined){\r\n\r\n                    try{\r\n                        \r\n                            //MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n                            const producto = await nuevoProducto({\r\n                                variables : {\r\n                                    input : {\r\n                                        nombre,\r\n                                        existencia, \r\n                                        precio\r\n                                    }\r\n                                }\r\n                            })\r\n                            console.log(\"Producto desde nuevo Producto\", producto);\r\n                            \r\n                            Swal.fire(\r\n                                'Creado',\r\n                                'Se creó el producto correctamente',\r\n                                'success',\r\n                                ).then(async ()=>{\r\n                                    await router.push('/productos');\r\n\r\n                                }\r\n            \r\n                            )\r\n                                \r\n                        }\r\n                        catch (error){\r\n                            console.log(error)\r\n                        }  \r\n                // }\r\n             }\r\n\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n    })\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light \">Crear nuevo producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Cantidad Disponible\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"existencia\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Cantidad Disponible\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.existencia}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.existencia && formik.errors.existencia ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.existencia}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio Producto\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.precio}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.precio}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div class=\"flex justify-center items-center w-full\">\r\n                            <label for=\"dropzone-file\" class=\"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\">\r\n                                <div class=\"flex flex-col justify-center items-center pt-5 pb-6\">\r\n                                    <svg aria-hidden=\"true\" class=\"mb-3 w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg>\r\n                                    <p class=\"mb-2 text-sm text-gray-500 dark:text-gray-400\"><span class=\"font-semibold\">Click to upload</span> or drag and drop</p>\r\n                                    <p class=\"text-xs text-gray-500 dark:text-gray-400\">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>\r\n                                </div>\r\n                                <input id=\"dropzone-file\" type=\"file\" class=\"hidden\"/>\r\n                            </label>\r\n                        </div> \r\n\r\n                        <input id=\"file-upload\"  type=\"file\" onChange={(event) => {\r\n                            formik.setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                        }} />\r\n\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Agregar Producto\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoProducto"]},"metadata":{},"sourceType":"module"}