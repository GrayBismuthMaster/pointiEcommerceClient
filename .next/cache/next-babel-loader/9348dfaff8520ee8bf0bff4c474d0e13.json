{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProductos{\\n        obtenerProductos{\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nvar OBTENER_PRODUCTOS = gql(_templateObject());\n\nvar AsignarProductos = function AsignarProductos() {\n  var _useState = useState([]),\n      producto = _useState[0],\n      setProductos = _useState[1]; //Context e pedidos\n\n\n  var pedidoContext = useContext(PedidoContext);\n  var agregarProductos = pedidoContext.agregarProductos; //Consulta a la bsae de datos\n\n  var _useQuery = useQuery(OBTENER_PRODUCTOS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  useEffect(function () {\n    agregarProductos(producto);\n    return function () {};\n  }, [producto]);\n  if (loading) return null;\n  var obtenerProductos = data.obtenerProductos;\n\n  var seleccionarProductos = function seleccionarProductos(productos) {\n    setProductos(productos);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\"\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    isMulti: true,\n    onChange: function onChange(option) {\n      return seleccionarProductos(option);\n    },\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return \"\".concat(opciones.nombre, \" - \").concat(opciones.existencia, \" Disponibles\");\n    },\n    placeholder: 'Seleccione los productos',\n    noOptionsMessage: \"No hay resultados\"\n  }));\n};\n\nexport default AsignarProductos;","map":null,"metadata":{},"sourceType":"module"}