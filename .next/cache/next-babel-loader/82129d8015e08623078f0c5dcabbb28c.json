{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\MGRN\\\\EcommercePointi\\\\client\\\\pages\\\\nuevoproducto.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProductos{\\n        obtenerProductos{\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoProducto($input : ProductoInput){\\n        nuevoProducto(input : $input){\\n            id\\n            nombre\\n            existencia\\n            precio\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport router from 'next/router';\nimport { useAddMessage, useMessages } from '../graphql/hooks';\nvar NUEVO_PRODUCTO = gql(_templateObject());\nvar OBTENER_PRODUCTOS = gql(_templateObject2());\n\nvar NuevoProducto = function NuevoProducto() {\n  _s();\n\n  //USEEFFECT TO REMOVE LISTENERS\n  useEffect(function () {\n    wrapperRef.current.addEventListener(\"ondragenter\", function (e) {\n      console.log(\"Evento removido\");\n    });\n    console.log(wrapperRef.current);\n    return function () {};\n  }, []); //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\n\n  var _useAddMessage = useAddMessage(),\n      addMessage = _useAddMessage.addMessage; //Mutation\n\n\n  var _useMutation = useMutation(NUEVO_PRODUCTO, {\n    update: function update(cache, _ref) {\n      var nuevoProducto = _ref.data.nuevoProducto;\n\n      //OBtener objeto de cache\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      }),\n          obtenerProductos = _cache$readQuery.obtenerProductos;\n\n      console.log(\"Obtener productos desde update\", obtenerProductos); //Reescribir cache\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [].concat(_toConsumableArray(obtenerProductos), [nuevoProducto])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoProducto = _useMutation2[0]; //Formulario para nuevos productos\n\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(valores) {\n        var nombre, existencia, precio, producto;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n\n                if (!(window !== undefined)) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 4;\n                return addMessage(\"Se agreg\\xF3 el producto \".concat(nombre));\n\n              case 4:\n                _context2.prev = 4;\n                _context2.next = 7;\n                return nuevoProducto({\n                  variables: {\n                    input: {\n                      nombre: nombre,\n                      existencia: existencia,\n                      precio: precio\n                    }\n                  }\n                });\n\n              case 7:\n                producto = _context2.sent;\n                console.log(\"Producto desde nuevo Producto\", producto);\n                Swal.fire('Creado', 'Se creó el producto correctamente', 'success').then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return router.push('/productos');\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })));\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.log(_context2.t0);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 12]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }); //EVENTOS PARA EL UPLOAD DE LOS ARCHIVOS\n  //ESTADO DE LA LISTA DE IMAGENES\n\n  var _useState = useState([]),\n      fileList = _useState[0],\n      setFileList = _useState[1]; //REFERENCIA\n\n\n  var wrapperRef = useRef(null);\n\n  var onDragEnter = function onDragEnter(e) {\n    e.preventDefault();\n    console.log(e);\n    wrapperRef.current.classList.add('dragover');\n    console.log(\"Drageado encima\");\n  };\n\n  var onDragLeave = function onDragLeave(e) {\n    e.preventDefault();\n    wrapperRef.current.classList.remove('dragover');\n    console.log(\"Deja\");\n  };\n\n  var onDrop = function onDrop(e) {\n    e.preventDefault();\n    wrapperRef.current.classList.remove('dragover');\n  };\n\n  var onFileDrop = function onFileDrop(e) {\n    console.log(\"Se dejo aca\");\n    var newFile = e.target.files[0];\n    formik.setFieldValue(\"file\", newFile);\n\n    if (newFile) {\n      var updatedList = [].concat(_toConsumableArray(fileList), [newFile]);\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Crear nuevo producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    onDragEnter: function onDragEnter(e) {\n      return e.preventDefault();\n    },\n    onDrag: function onDrag(e) {\n      return e.preventDefault();\n    },\n    onDragEnd: function onDragEnd(e) {\n      return e.preventDefault();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.precio)) : null, __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full\",\n    ref: wrapperRef,\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDrop: onDrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dropzone-file\",\n    className: \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center pt-5 pb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, __jsx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    className: \"mb-3 w-10 h-10 text-gray-400\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 191\n    }\n  })), __jsx(\"p\", {\n    className: \"mb-2 text-sm text-gray-500 dark:text-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 37\n    }\n  }, __jsx(\"span\", {\n    className: \"font-semibold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 98\n    }\n  }, \"Click to upload\"), \" or drag and drop\"), __jsx(\"p\", {\n    className: \"text-xs text-gray-500 dark:text-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, \"SVG, PNG, JPG or GIF (MAX. 800x400px)\")), __jsx(\"input\", {\n    id: \"dropzone-file\",\n    type: \"file\",\n    className: \"hidden\",\n    onChange: onFileDrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }))), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(NuevoProducto, \"mrhuicS+HDPeBKNoW+7LDwTpTLU=\", false, function () {\n  return [useAddMessage, useMutation, useFormik];\n});\n\n_c = NuevoProducto;\nexport default NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/pages/nuevoproducto.js"],"names":["Link","React","useEffect","useRef","useState","Layout","useFormik","Yup","gql","useMutation","Swal","router","useAddMessage","useMessages","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","NuevoProducto","wrapperRef","current","addEventListener","e","console","log","addMessage","update","cache","nuevoProducto","data","readQuery","query","obtenerProductos","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","window","undefined","variables","input","producto","fire","then","push","fileList","setFileList","onDragEnter","preventDefault","classList","add","onDragLeave","remove","onDrop","onFileDrop","newFile","target","files","setFieldValue","updatedList","props","onFileChange","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport Swal from 'sweetalert2'\r\nimport router from 'next/router';\r\nimport { useAddMessage, useMessages } from '../graphql/hooks';\r\n\r\nconst NUEVO_PRODUCTO = gql`\r\n    mutation nuevoProducto($input : ProductoInput){\r\n        nuevoProducto(input : $input){\r\n            id\r\n            nombre\r\n            existencia\r\n            precio\r\n        }\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\n\r\nconst NuevoProducto = () => {\r\n    \r\n    //USEEFFECT TO REMOVE LISTENERS\r\n    useEffect(() => {\r\n        wrapperRef.current.addEventListener(\"ondragenter\", (e)=>{console.log(\"Evento removido\")});\r\n        \r\n        console.log(wrapperRef.current);\r\n        return () => {\r\n        \r\n        };\r\n    }, [])\r\n\r\n    //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n    const { addMessage } = useAddMessage();\r\n    \r\n    \r\n\r\n    //Mutation\r\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\r\n        update(cache,{data:{nuevoProducto}}){\r\n            //OBtener objeto de cache\r\n            const {obtenerProductos} = cache.readQuery({query: OBTENER_PRODUCTOS});\r\n            console.log(\"Obtener productos desde update\", obtenerProductos);\r\n            \r\n            \r\n            //Reescribir cache\r\n            cache.writeQuery({\r\n                query : OBTENER_PRODUCTOS,\r\n                data : {\r\n                    obtenerProductos : [...obtenerProductos , nuevoProducto]\r\n                }\r\n            });\r\n        }\r\n    });\r\n    //Formulario para nuevos productos\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre : '',\r\n            existencia: '',\r\n            precio : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre : Yup.string()\r\n                        .required('El nombre del producto es obligatorio'),\r\n            existencia : Yup.number()\r\n                            .required('Agrega la cantidad disponible')\r\n                            .positive('No se aceptan números negativos')\r\n                            .integer('La existencia deben ser enteros'),\r\n            precio : Yup.number()\r\n                        .required('El precio es obligatorio')\r\n                        .positive(' Los números deben ser positivos')\r\n        }),\r\n        onSubmit : async valores =>{\r\n             const {nombre, existencia, precio} = valores;\r\n             \r\n             if(window !== undefined){\r\n                await addMessage(`Se agregó el producto ${nombre}`);\r\n                // const message = await addMessage(`Se agregó el producto ${nombre}`);\r\n                // console.log(\"Mensaje desde onSubmit\", message);\r\n                // if(message.id !== undefined){\r\n\r\n                    try{\r\n                        \r\n                            //MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n                            const producto = await nuevoProducto({\r\n                                variables : {\r\n                                    input : {\r\n                                        nombre,\r\n                                        existencia, \r\n                                        precio\r\n                                    }\r\n                                }\r\n                            })\r\n                            console.log(\"Producto desde nuevo Producto\", producto);\r\n                            \r\n                            Swal.fire(\r\n                                'Creado',\r\n                                'Se creó el producto correctamente',\r\n                                'success',\r\n                                ).then(async ()=>{\r\n                                    await router.push('/productos');\r\n\r\n                                }\r\n            \r\n                            )\r\n                                \r\n                        }\r\n                        catch (error){\r\n                            console.log(error)\r\n                        }  \r\n                // }\r\n             }\r\n\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n    })\r\n\r\n    //EVENTOS PARA EL UPLOAD DE LOS ARCHIVOS\r\n        //ESTADO DE LA LISTA DE IMAGENES\r\n        const [fileList, setFileList] = useState([]);\r\n\r\n        //REFERENCIA\r\n        const wrapperRef = useRef(null);\r\n\r\n    const onDragEnter = (e) => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n        wrapperRef.current.classList.add('dragover')\r\n        console.log(\"Drageado encima\");\r\n    };\r\n\r\n    const onDragLeave = (e) => {\r\n        e.preventDefault();\r\n        wrapperRef.current.classList.remove('dragover')\r\n        console.log(\"Deja\");\r\n    };\r\n\r\n    const onDrop = (e) => {\r\n        e.preventDefault();\r\n        wrapperRef.current.classList.remove('dragover')\r\n    };\r\n\r\n    const onFileDrop = (e) => {\r\n        console.log(\"Se dejo aca\");\r\n        const newFile = e.target.files[0];\r\n\r\n        formik.setFieldValue(\"file\", newFile);\r\n\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            props.onFileChange(updatedList);\r\n        }\r\n    }\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light \">Crear nuevo producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                        onDragEnter={(e)=>e.preventDefault()}\r\n                        onDrag={(e)=>e.preventDefault()}\r\n                        onDragEnd={(e)=>e.preventDefault()}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Cantidad Disponible\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"existencia\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Cantidad Disponible\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.existencia}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.existencia && formik.errors.existencia ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.existencia}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio Producto\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.precio}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.precio}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"flex justify-center items-center w-full\" ref={wrapperRef} onDragEnter={onDragEnter} onDragLeave={onDragLeave} onDrop={onDrop} >\r\n                            <label htmlFor=\"dropzone-file\" className=\"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\">\r\n                                <div className=\"flex flex-col justify-center items-center pt-5 pb-6\">\r\n                                    <svg aria-hidden=\"true\" className=\"mb-3 w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg>\r\n                                    <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\"><span className=\"font-semibold\">Click to upload</span> or drag and drop</p>\r\n                                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>\r\n                                </div>\r\n                                <input id=\"dropzone-file\" type=\"file\" className=\"hidden\" onChange={onFileDrop} />\r\n                            </label>\r\n                        </div> \r\n\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Agregar Producto\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoProducto"]},"metadata":{},"sourceType":"module"}