{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\nuevacuenta.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useMutation, gql } from '@apollo/client';\nconst NUEVA_CUENTA = gql`\n    mutation nuevoUsuario($input: UsuarioInput) {\n        nuevoUsuario(input:$input) {\n            id\n            nombre\n            apellido\n            email\n        }\n    }\n`;\n\nconst NuevaCuenta = () => {\n  //State para el mensaje\n  const {\n    0: mensaje,\n    1: guardarMensaje\n  } = useState(null); //Mutation para crear nuevos usuarios\n\n  const [nuevoUsuario] = useMutation(NUEVA_CUENTA); //Routing\n\n  const router = useRouter(); //Validación el formulario\n\n  const formik = useFormik({\n    initialValues: {\n      nombre: 'Holi',\n      apellido: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre es obligatorio\"),\n      apellido: Yup.string().required(\"El apellido es obligatorio\"),\n      email: Yup.string().email(\"El email no es valido\").required('El email es obligatorio'),\n      password: Yup.string().required(\"El password no puede ir vacio\").min(6, 'El password no puede ir vacio')\n    }),\n    onSubmit: async valores => {\n      console.log('enviando');\n      console.log(valores); //Destructuring de los valores del formulario\n\n      const {\n        nombre,\n        apellido,\n        email,\n        password\n      } = valores;\n\n      try {\n        const {\n          data\n        } = await nuevoUsuario({\n          variables: {\n            input: {\n              nombre,\n              apellido,\n              email,\n              password\n            }\n          }\n        });\n        console.log(data); //Usuario creado correctamente\n\n        guardarMensaje(`Se creó correctamente el Usuario: ${data.nuevoUsuario.nombre}`);\n        setTimeout(() => {\n          guardarMensaje(null);\n        }, 3000); //Redirigir Usuario para iniciar sesión\n      } catch (error) {\n        guardarMensaje(error.message.replace('GraphQL error : ', ''));\n        setTimeout(() => {\n          guardarMensaje(null);\n        }, 3000);\n      }\n    }\n  }); //Mostrar mensjae\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, mensaje && mostrarMensaje(), __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Crear Nueva Cuenta\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre  Usuario\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Usuario\",\n    value: formik.values.apellido,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900\",\n    value: \"Crear Cuenta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default NuevaCuenta;","map":{"version":3,"sources":["D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/nuevacuenta.js"],"names":["React","useState","useRouter","Layout","useFormik","Yup","useMutation","gql","NUEVA_CUENTA","NuevaCuenta","mensaje","guardarMensaje","nuevoUsuario","router","formik","initialValues","nombre","apellido","email","password","validationSchema","object","string","required","min","onSubmit","valores","console","log","data","variables","input","setTimeout","error","message","replace","mostrarMensaje","handleSubmit","values","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {useRouter} from 'next/router'\r\nimport Layout from '../components/Layout'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {useMutation, gql} from '@apollo/client'\r\n\r\nconst NUEVA_CUENTA = gql`\r\n    mutation nuevoUsuario($input: UsuarioInput) {\r\n        nuevoUsuario(input:$input) {\r\n            id\r\n            nombre\r\n            apellido\r\n            email\r\n        }\r\n    }\r\n`;\r\n\r\nconst NuevaCuenta = () => {\r\n    //State para el mensaje\r\n    const [mensaje, guardarMensaje] = useState(null);\r\n   //Mutation para crear nuevos usuarios\r\n    const [nuevoUsuario ] = useMutation(NUEVA_CUENTA);\r\n    //Routing\r\n    const router = useRouter();\r\n    //Validación el formulario\r\n    const formik= useFormik({\r\n        initialValues : {\r\n            nombre:'Holi',\r\n            apellido: '',\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre: Yup.string().required(\"El nombre es obligatorio\"),\r\n            apellido: Yup.string().required(\"El apellido es obligatorio\"),\r\n            email: Yup.string().email(\"El email no es valido\").required('El email es obligatorio'),\r\n            password: Yup.string().required(\"El password no puede ir vacio\").min(6, 'El password no puede ir vacio')\r\n        }),\r\n        onSubmit: async valores =>{\r\n            console.log('enviando');\r\n            console.log(valores);\r\n            //Destructuring de los valores del formulario\r\n            const {nombre, apellido, email,password} = valores\r\n            try {\r\n               const {data} = await nuevoUsuario({\r\n                   variables : {\r\n                       input : {\r\n                            nombre,\r\n                            apellido,\r\n                            email,\r\n                            password\r\n                       }\r\n                   }\r\n               })\r\n               console.log(data);\r\n               //Usuario creado correctamente\r\n                guardarMensaje(`Se creó correctamente el Usuario: ${data.nuevoUsuario.nombre}`);\r\n                setTimeout(()=>{\r\n                    guardarMensaje(null)\r\n                    \r\n                }, 3000)\r\n               //Redirigir Usuario para iniciar sesión\r\n               \r\n            } catch (error) {\r\n                guardarMensaje(error.message.replace('GraphQL error : ', ''))\r\n                setTimeout(()=>{\r\n                        guardarMensaje(null)\r\n                }, 3000)\r\n            }\r\n        }\r\n    });\r\n    \r\n    //Mostrar mensjae\r\n    const mostrarMensaje = () => {\r\n        return(\r\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\r\n                <p>{mensaje}</p>\r\n            </div>       \r\n        )\r\n        \r\n    }\r\n    \r\n    return (  \r\n        <>\r\n            <Layout>\r\n                {mensaje && mostrarMensaje()}\r\n\r\n                <h1 className=\"text-center text-2xl text-white font-light\">Crear Nueva Cuenta</h1>\r\n                <div className=\"flex justify-center mt-5\">\r\n                    <div className=\"w-full max-w-sm\">\r\n                        <form \r\n                            className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                            \r\n                            <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre  Usuario\"\r\n                                    value={formik.values.nombre}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                />\r\n                            </div>\r\n                            { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null}\r\n\r\n                            <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"apellido\">\r\n                                    Apellido\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"apellido\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Apellido Usuario\"\r\n                                    value={formik.values.apellido}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            </div>\r\n                            { formik.touched.apellido && formik.errors.apellido ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.apellido}</p>  \r\n                                </div>\r\n                            ): null}\r\n                            <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email Usuario\"\r\n                                    value={formik.values.email}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            </div>\r\n                            { formik.touched.email && formik.errors.email ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.email}</p>  \r\n                                </div>\r\n                            ): null}\r\n                            <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"password\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password Usuario\"\r\n                                    value={formik.values.password}\r\n                                    onChange={formik.handleChange}\r\n                                />\r\n                            </div>\r\n                            { formik.touched.password && formik.errors.password ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.password}</p>  \r\n                                </div>\r\n                            ): null}\r\n                            <input\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900\" \r\n                            value=\"Crear Cuenta\"\r\n\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n           \r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default NuevaCuenta;"]},"metadata":{},"sourceType":"module"}