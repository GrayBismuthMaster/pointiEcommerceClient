{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\context\\\\pedidos\\\\PedidoState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS } from '../../types';\n\nconst PedidoState = ({\n  children\n}) => {\n  //State de Pedidos\n  const initialState = {\n    cliente: {},\n    productos: [],\n    total: 0\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(PedidoReducer, initialState);\n\n  const agregarCliente = cliente => {\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: cliente\n    });\n  };\n\n  const agregarProductos = productosSeleccionados => {\n    let nuevoState;\n\n    if (state.productos.length > 0) {\n      //Tomar del segundo arreglo, una copia para asignarlo al primero\n      nuevoState = productosSeleccionados.map(producto => {\n        const nuevoObjeto = state.productos.find();\n      });\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: productos\n    });\n  };\n\n  const cantidadProductos = nuevoProducto => {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      productos: state.productos,\n      agregarCliente,\n      agregarProductos,\n      cantidadProductos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default PedidoState;","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/context/pedidos/PedidoState.js"],"names":["React","useReducer","PedidoContext","PedidoReducer","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","CANTIDAD_PRODUCTOS","PedidoState","children","initialState","cliente","productos","total","state","dispatch","agregarCliente","type","payload","agregarProductos","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","cantidadProductos","nuevoProducto"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,mBADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,QAIO,aAJP;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC/B;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAG,EADO;AAEjBC,IAAAA,SAAS,EAAG,EAFK;AAGjBC,IAAAA,KAAK,EAAG;AAHS,GAArB;AAKA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,UAAU,CAACE,aAAD,EAAgBM,YAAhB,CAApC;;AACA,QAAMM,cAAc,GAAIL,OAAD,IAAY;AAC/BI,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAGZ,mBADF;AAELa,MAAAA,OAAO,EAAGP;AAFL,KAAD,CAAR;AAIH,GALD;;AAMA,QAAMQ,gBAAgB,GAAIC,sBAAD,IAA2B;AAChD,QAAIC,UAAJ;;AACA,QAAGP,KAAK,CAACF,SAAN,CAAgBU,MAAhB,GAAyB,CAA5B,EAA8B;AAC1B;AACAD,MAAAA,UAAU,GAAGD,sBAAsB,CAACG,GAAvB,CAA2BC,QAAQ,IAAG;AAC/C,cAAMC,WAAW,GAAGX,KAAK,CAACF,SAAN,CAAgBc,IAAhB,EAApB;AACH,OAFY,CAAb;AAGH,KALD,MAKK;AACDL,MAAAA,UAAU,GAAGD,sBAAb;AACH;;AACDL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAGX,oBADF;AAELY,MAAAA,OAAO,EAAGN;AAFL,KAAD,CAAR;AAIH,GAdD;;AAeA,QAAMe,iBAAiB,GAAIC,aAAD,IAAiB;AACvCb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAGV,kBADF;AAELW,MAAAA,OAAO,EAAGU;AAFL,KAAD,CAAR;AAIH,GALD;;AAMA,SACI,MAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHhB,MAAAA,SAAS,EAAGE,KAAK,CAACF,SADf;AAEHI,MAAAA,cAFG;AAGHG,MAAAA,gBAHG;AAIHQ,MAAAA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKlB,QARL,CADJ;AAYH,CA/CD;;AAiDA,eAAeD,WAAf","sourcesContent":["import React, {useReducer} from 'react'\r\nimport PedidoContext from './PedidoContext'\r\nimport PedidoReducer from './PedidoReducer'\r\nimport {\r\n    SELECCIONAR_CLIENTE,\r\n    SELECCIONAR_PRODUCTO,\r\n    CANTIDAD_PRODUCTOS\r\n} from '../../types'\r\n\r\nconst PedidoState = ({children}) =>{\r\n    //State de Pedidos\r\n    const initialState = {\r\n        cliente : {},\r\n        productos : [],\r\n        total : 0\r\n    }\r\n    const [state, dispatch] = useReducer(PedidoReducer, initialState);\r\n    const agregarCliente = (cliente) =>{\r\n        dispatch({\r\n            type : SELECCIONAR_CLIENTE, \r\n            payload : cliente\r\n        })\r\n    }\r\n    const agregarProductos = (productosSeleccionados) =>{\r\n        let nuevoState;\r\n        if(state.productos.length > 0){\r\n            //Tomar del segundo arreglo, una copia para asignarlo al primero\r\n            nuevoState = productosSeleccionados.map(producto =>{\r\n                const nuevoObjeto = state.productos.find()\r\n            })\r\n        }else{\r\n            nuevoState = productosSeleccionados;\r\n        }\r\n        dispatch({\r\n            type : SELECCIONAR_PRODUCTO,\r\n            payload : productos\r\n        })\r\n    }\r\n    const cantidadProductos = (nuevoProducto)=>{\r\n        dispatch({\r\n            type : CANTIDAD_PRODUCTOS,\r\n            payload : nuevoProducto\r\n        });\r\n    }\r\n    return (\r\n        <PedidoContext.Provider\r\n            value={{\r\n                productos : state.productos,\r\n                agregarCliente,\r\n                agregarProductos,\r\n                cantidadProductos\r\n            }}\r\n        >\r\n            {children}\r\n        </PedidoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PedidoState;"]},"metadata":{},"sourceType":"module"}