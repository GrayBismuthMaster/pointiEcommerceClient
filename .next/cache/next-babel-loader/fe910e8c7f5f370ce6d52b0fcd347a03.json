{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport jwtDecode from 'jwt-decode';\nvar ACCESS_TOKEN_KEY = 'token';\nvar API_URL = 'http://localhost:9000';\nexport function getAccessToken() {\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\n}\nexport function getUser() {\n  var token = getAccessToken();\n\n  if (!token) {\n    return null;\n  }\n\n  return getUserFromToken(token);\n}\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId, password) {\n    var response, _yield$response$json, token;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(API_URL, \"/login\"), {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                userId: userId,\n                password: password\n              })\n            });\n\n          case 2:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            _yield$response$json = _context.sent;\n            token = _yield$response$json.token;\n            localStorage.setItem(ACCESS_TOKEN_KEY, token);\n            return _context.abrupt(\"return\", {\n              id: userId\n            });\n\n          case 10:\n            return _context.abrupt(\"return\", null);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nexport function logout() {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n}\n\nfunction getUserFromToken(token) {\n  var jwtPayload = jwtDecode(token);\n  return {\n    id: jwtPayload.sub\n  };\n}","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/auth/auth.js"],"names":["jwtDecode","ACCESS_TOKEN_KEY","API_URL","getAccessToken","localStorage","getItem","getUser","token","getUserFromToken","login","userId","password","fetch","method","headers","body","JSON","stringify","response","ok","json","setItem","id","logout","removeItem","jwtPayload","sub"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,IAAMC,gBAAgB,GAAG,OAAzB;AACA,IAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAOC,YAAY,CAACC,OAAb,CAAqBJ,gBAArB,CAAP;AACD;AAED,OAAO,SAASK,OAAT,GAAmB;AACxB,MAAMC,KAAK,GAAGJ,cAAc,EAA5B;;AACA,MAAI,CAACI,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AACD,SAAOC,gBAAgB,CAACD,KAAD,CAAvB;AACD;AAED,gBAAsBE,KAAtB;AAAA;AAAA;;;oEAAO,iBAAqBC,MAArB,EAA6BC,QAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBC,KAAK,WAAIV,OAAJ,aAAqB;AAC/CW,cAAAA,MAAM,EAAE,MADuC;AAE/CC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFsC;AAK/CC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,gBAAAA,MAAM,EAANA,MAAF;AAAUC,gBAAAA,QAAQ,EAARA;AAAV,eAAf;AALyC,aAArB,CADvB;;AAAA;AACCO,YAAAA,QADD;;AAAA,iBAQDA,QAAQ,CAACC,EARR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASqBD,QAAQ,CAACE,IAAT,EATrB;;AAAA;AAAA;AASKb,YAAAA,KATL,wBASKA,KATL;AAUHH,YAAAA,YAAY,CAACiB,OAAb,CAAqBpB,gBAArB,EAAuCM,KAAvC;AAVG,6CAWI;AAAEe,cAAAA,EAAE,EAAEZ;AAAN,aAXJ;;AAAA;AAAA,6CAaE,IAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBP,OAAO,SAASa,MAAT,GAAkB;AACvBnB,EAAAA,YAAY,CAACoB,UAAb,CAAwBvB,gBAAxB;AACD;;AAED,SAASO,gBAAT,CAA0BD,KAA1B,EAAiC;AAC/B,MAAMkB,UAAU,GAAGzB,SAAS,CAACO,KAAD,CAA5B;AACA,SAAO;AAAEe,IAAAA,EAAE,EAAEG,UAAU,CAACC;AAAjB,GAAP;AACD","sourcesContent":["import jwtDecode from 'jwt-decode';\r\n\r\nconst ACCESS_TOKEN_KEY = 'token';\r\nconst API_URL = 'http://localhost:9000';\r\n\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\r\n}\r\n\r\nexport function getUser() {\r\n  const token = getAccessToken();\r\n  if (!token) {\r\n    return null;\r\n  }\r\n  return getUserFromToken(token);\r\n}\r\n\r\nexport async function login(userId, password) {\r\n  const response = await fetch(`${API_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ userId, password }),\r\n  });\r\n  if (response.ok) {\r\n    const { token } = await response.json();\r\n    localStorage.setItem(ACCESS_TOKEN_KEY, token);\r\n    return { id: userId };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\r\n}\r\n\r\nfunction getUserFromToken(token) {\r\n  const jwtPayload = jwtDecode(token)\r\n  return { id: jwtPayload.sub };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}