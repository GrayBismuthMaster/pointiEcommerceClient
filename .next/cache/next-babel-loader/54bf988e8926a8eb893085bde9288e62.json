{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\editarProducto\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProducto($id : ID!){\\n        obtenerProducto(id : $id){\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport { gql, useQuery } from '@apollo/client';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nvar OBTENER_PRODUCTO = gql(_templateObject());\n\nvar EditarProducto = function EditarProducto() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id; //COnsultar para obtener el producto\n\n  var _useQuery = useQuery(OBTENER_PRODUCTO, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; //Schema de Validación\n\n\n  var validationSchema = Yup.object({\n    nombre: Yup.string().required('El nombre del producto es obligatorio'),\n    existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n    precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n  });\n  if (loading) return 'Cargando ... ';\n  var obtenerProducto = data.obtenerProducto;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Editar Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(Formik, {\n    enableReinitialize: true,\n    initialValues: obtenerProducto,\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, function (props) {\n    return __jsx(\"form\", {\n      className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n      onSubmit: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 49\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n      ,\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.nombre,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 49\n      }\n    })), props.touched.nombre && props.errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 49\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 49\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 49\n      }\n    }, \" \", props.errors.nombre)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 49\n      }\n    }, \"Cantidad Disponible\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"existencia\",\n      type: \"number\",\n      placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n      ,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.existencia,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }\n    }, \"Precio\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"precio\",\n      type: \"number\",\n      placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n      ,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.precio,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 49\n      }\n    })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 49\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 49\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, \" \", formik.errors.precio)) : null, __jsx(\"input\", {\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"Agregar Producto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }));\n  }))));\n};\n\n_s(EditarProducto, \"tGq+PxnmmFtLE4RPuNYzExcUlMQ=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = EditarProducto;\nexport default EditarProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditarProducto\");","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/editarProducto/[id].js"],"names":["React","useRouter","Layout","gql","useQuery","Formik","Yup","OBTENER_PRODUCTO","EditarProducto","router","id","query","variables","data","loading","error","validationSchema","object","nombre","string","required","existencia","number","positive","integer","precio","obtenerProducto","props","handleSubmit","handleChange","handleBlur","values","touched","errors","formik"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Layout from '../../components/Layout';\r\nimport {gql, useQuery} from '@apollo/client'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst OBTENER_PRODUCTO = gql`\r\n    query obtenerProducto($id : ID!){\r\n        obtenerProducto(id : $id){\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\nconst EditarProducto = () => {\r\n    const router = useRouter();\r\n    const {query : {id}} = router;\r\n    //COnsultar para obtener el producto\r\n    const {data, loading, error} = useQuery(OBTENER_PRODUCTO, {\r\n        variables : {\r\n            id\r\n        }\r\n    });\r\n    //Schema de Validación\r\n    const validationSchema = Yup.object({\r\n        nombre : Yup.string()\r\n                    .required('El nombre del producto es obligatorio'),\r\n        existencia : Yup.number()\r\n                        .required('Agrega la cantidad disponible')\r\n                        .positive('No se aceptan números negativos')\r\n                        .integer('La existencia deben ser enteros'),\r\n        precio : Yup.number()\r\n                    .required('El precio es obligatorio')\r\n                    .positive(' Los números deben ser positivos')\r\n    })\r\n    if(loading) return 'Cargando ... '\r\n    const {obtenerProducto } = data;\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light\">Editar Producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={obtenerProducto}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {\r\n                            props =>{\r\n\r\n                                return(\r\n                                    <form\r\n                                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                                        onSubmit={props.handleSubmit}\r\n                                    >\r\n                                        <div className=\"mb-4\">\r\n                                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                                    Nombre\r\n                                                </label>\r\n                                                <input\r\n                                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                    id=\"nombre\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Nombre\"\r\n                                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                                    \r\n                                                     onChange={props.handleChange}\r\n                                                     onBlur={props.handleBlur}\r\n                                                     value = {props.values.nombre}\r\n                                                />\r\n                                        </div>\r\n                                        { props.touched.nombre && props.errors.nombre ? (\r\n                                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                                <p className=\"font-bold\">Error</p>\r\n                                                <p> {props.errors.nombre}</p>  \r\n                                                </div>\r\n                                            ): null\r\n                                        }\r\n                                        <div className=\"mb-4\">\r\n                                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                                    Cantidad Disponible\r\n                                                </label>\r\n                                                <input\r\n                                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                    id=\"existencia\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"Cantidad Disponible\"\r\n                                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                                    \r\n                                                     onChange={formik.handleChange}\r\n                                                     onBlur={formik.handleBlur}\r\n                                                     value = {formik.values.existencia}\r\n                                                />\r\n                                        </div>\r\n                                        {/* { formik.touched. */}\r\n                                        <div className=\"mb-4\">\r\n                                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                                    Precio\r\n                                                </label>\r\n                                                <input\r\n                                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                                    id=\"precio\"\r\n                                                    type=\"number\"\r\n                                                    placeholder=\"Precio Producto\"\r\n                                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                                    \r\n                                                     onChange={formik.handleChange}\r\n                                                     onBlur={formik.handleBlur}\r\n                                                     value = {formik.values.precio}\r\n                                                />\r\n                                        </div>\r\n                                        { formik.touched.precio && formik.errors.precio ? (\r\n                                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                                <p className=\"font-bold\">Error</p>\r\n                                                <p> {formik.errors.precio}</p>  \r\n                                                </div>\r\n                                            ): null\r\n                                        }\r\n                                        <input\r\n                                            type='submit'\r\n                                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                                            value=\"Agregar Producto\"\r\n                                        />\r\n                                    </form>\r\n                                )\r\n                            }\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default EditarProducto"]},"metadata":{},"sourceType":"module"}