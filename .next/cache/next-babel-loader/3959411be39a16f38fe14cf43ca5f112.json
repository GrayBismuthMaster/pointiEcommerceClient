{"ast":null,"code":"import _defineProperty from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\Javascript\\\\MGRN\\\\EcommercePointi\\\\client\\\\pages\\\\nuevoproducto.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($filename: String!, $filetype: String!) {\\n    signS3(filename: $filename, filetype: $filetype) {\\n      url\\n      signedRequest\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProductos{\\n        obtenerProductos{\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoProducto($input : ProductoInput){\\n        nuevoProducto(input : $input){\\n            id\\n            nombre\\n            existencia\\n            precio\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport router from 'next/router';\nimport { useAddMessage, useMessages } from '../graphql/hooks';\nimport { useS3Upload } from '../hooks/useS3Upload';\nvar NUEVO_PRODUCTO = gql(_templateObject());\nvar OBTENER_PRODUCTOS = gql(_templateObject2());\nvar S3UPLOAD = gql(_templateObject3());\n\nvar NuevoProducto = function NuevoProducto() {\n  _s();\n\n  //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\n  var _useAddMessage = useAddMessage(),\n      addMessage = _useAddMessage.addMessage; //CAMBIO DE SOMBRA PARA DRAG AND DROP\n\n\n  var _useState = useState(false),\n      classStateBG = _useState[0],\n      setClassStateBG = _useState[1]; //CUSTOM HOOK PARA S3 UPLOAD\n\n\n  var _useS3Upload = useS3Upload(),\n      s3State = _useS3Upload.s3State,\n      setS3State = _useS3Upload.setS3State,\n      formatFilename = _useS3Upload.formatFilename,\n      uploadToS3 = _useS3Upload.uploadToS3; //mutation\n\n\n  var _useMutation = useMutation(S3UPLOAD),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      signS3 = _useMutation2[0]; //Mutation\n\n\n  var _useMutation3 = useMutation(NUEVO_PRODUCTO, {\n    update: function update(cache, _ref) {\n      var nuevoProducto = _ref.data.nuevoProducto;\n\n      //OBtener objeto de cache\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      }),\n          obtenerProductos = _cache$readQuery.obtenerProductos;\n\n      console.log(\"Obtener productos desde update\", obtenerProductos); //Reescribir cache\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [].concat(_toConsumableArray(obtenerProductos), [nuevoProducto])\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      nuevoProducto = _useMutation4[0]; //Formulario para nuevos productos\n\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(valores) {\n        var nombre, existencia, precio, response, _response$data$signS, signedRequest, url, resUpload;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n\n                if (!(window !== undefined)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 4;\n                return signS3({\n                  variables: {\n                    filename: formatFilename(s3State.file.name),\n                    filetype: sfile.type\n                  }\n                });\n\n              case 4:\n                response = _context.sent;\n                _response$data$signS = response.data.signS3, signedRequest = _response$data$signS.signedRequest, url = _response$data$signS.url;\n                _context.next = 8;\n                return uploadToS3(s3State.file, signedRequest);\n\n              case 8:\n                resUpload = _context.sent;\n                console.log(\"RESPUESTA DE S3\", resUpload, \"URL\", url); //END UPLOAD FILE \n                // await addMessage(`Se agregó el producto ${nombre}`);\n                // // const message = await addMessage(`Se agregó el producto ${nombre}`);\n                // // console.log(\"Mensaje desde onSubmit\", message);\n                // // if(message.id !== undefined){\n                // try{\n                //         //MENSAJE DE NUEVO PRODUCTO AGREGADO\n                //         const producto = await nuevoProducto({\n                //             variables : {\n                //                 input : {\n                //                     nombre,\n                //                     existencia, \n                //                     precio\n                //                 }\n                //             }\n                //         })\n                //         console.log(\"Producto desde nuevo Producto\", producto);\n                //         Swal.fire(\n                //             'Creado',\n                //             'Se creó el producto correctamente',\n                //             'success',\n                //             ).then(async ()=>{\n                //                 await router.push('/productos');\n                //             }\n                //         )\n                // }\n                // catch (error){\n                //     console.log(error)\n                // }  \n                // }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }); //EVENTOS PARA EL UPLOAD DE LOS ARCHIVOS\n  //ESTADO DE LA LISTA DE IMAGENES\n\n  var _useState2 = useState([]),\n      fileList = _useState2[0],\n      setFileList = _useState2[1]; //REFERENCIA\n\n\n  var wrapperRef = useRef(null);\n\n  var handleDragEnter = function handleDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n\n    wrapperRef.current.classList.add('bg-black-800'); // console.log(\"Drageado encima\");\n  };\n\n  var handleDragLeave = function handleDragLeave(e) {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n    // wrapperRef.current.classList.remove('bg-black-800')\n    // console.log(\"Deja\");\n  };\n\n  var handleDragOver = function handleDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n    // wrapperRef.current.classList.add(\"bg-black-800\")\n\n    setClassStateBG(true); // console.log(\"Deja\");\n  };\n\n  var handleDrop = function handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation(); // console.log(e);\n    // wrapperRef.current.classList.remove('bg-black-800')\n\n    console.log(e.dataTransfer);\n    var newFile = e.dataTransfer.files[0];\n    setS3State(_objectSpread(_objectSpread({}, s3State), {}, {\n      file: newFile,\n      name: newFile.name\n    }));\n    formik.setFieldValue(\"file\", newFile);\n\n    if (newFile) {\n      var updatedList = [].concat(_toConsumableArray(fileList), [newFile]);\n      setFileList(updatedList); // onFileChange(updatedList);\n    }\n\n    setClassStateBG(false);\n  };\n\n  var onFileDrop = function onFileDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(\"Se dejo aca\");\n    var newFile = e.target.files[0];\n    formik.setFieldValue(\"file\", newFile);\n\n    if (newFile) {\n      var updatedList = [].concat(_toConsumableArray(fileList), [newFile]);\n      setFileList(updatedList); // onFileChange(updatedList);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, \"Crear nuevo producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    onDragEnter: function onDragEnter(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDrag: function onDrag(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDragEnd: function onDragEnd(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    onDragLeave: function onDragLeave(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.precio)) : null, __jsx(\"div\", {\n    className: \"flex justify-center items-center w-full\",\n    onChange: onFileDrop,\n    ref: wrapperRef,\n    onDragEnter: function onDragEnter(e) {\n      return handleDragEnter(e);\n    },\n    onDragOver: function onDragOver(e) {\n      return handleDragOver(e);\n    },\n    onDragLeave: function onDragLeave(e) {\n      return handleDragLeave(e);\n    },\n    onDrop: function onDrop(e) {\n      return handleDrop(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"dropzone-file\",\n    className: classStateBG ? \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 bg-gray-800\" : \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"flex flex-col justify-center items-center pt-5 pb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, __jsx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    className: \"mb-3 w-10 h-10 text-gray-400\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 191\n    }\n  })), __jsx(\"p\", {\n    className: \"mb-2 text-sm text-gray-500 dark:text-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, __jsx(\"span\", {\n    className: \"font-semibold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 98\n    }\n  }, \"Click to upload\"), \" or drag and drop\"), __jsx(\"p\", {\n    className: \"text-xs text-gray-500 dark:text-gray-400\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, \"SVG, PNG, JPG or GIF (MAX. 800x400px)\")), __jsx(\"input\", {\n    id: \"dropzone-file\",\n    type: \"file\",\n    className: \"hidden\",\n    onChange: onFileDrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }))), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(NuevoProducto, \"Dlp8PRaca7raIxcGv4M2/FzRyME=\", false, function () {\n  return [useAddMessage, useS3Upload, useMutation, useMutation, useFormik];\n});\n\n_c = NuevoProducto;\nexport default NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/pages/nuevoproducto.js"],"names":["Link","React","useEffect","useRef","useState","Layout","useFormik","Yup","gql","useMutation","Swal","router","useAddMessage","useMessages","useS3Upload","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","S3UPLOAD","NuevoProducto","addMessage","classStateBG","setClassStateBG","s3State","setS3State","formatFilename","uploadToS3","signS3","update","cache","nuevoProducto","data","readQuery","query","obtenerProductos","console","log","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","window","undefined","variables","filename","file","name","filetype","sfile","type","response","signedRequest","url","resUpload","fileList","setFileList","wrapperRef","handleDragEnter","e","preventDefault","stopPropagation","current","classList","add","handleDragLeave","handleDragOver","handleDrop","dataTransfer","newFile","files","setFieldValue","updatedList","onFileDrop","target","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport Swal from 'sweetalert2'\r\nimport router from 'next/router';\r\nimport { useAddMessage, useMessages } from '../graphql/hooks';\r\nimport { useS3Upload } from '../hooks/useS3Upload';\r\n\r\nconst NUEVO_PRODUCTO = gql`\r\n    mutation nuevoProducto($input : ProductoInput){\r\n        nuevoProducto(input : $input){\r\n            id\r\n            nombre\r\n            existencia\r\n            precio\r\n        }\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\nconst S3UPLOAD = gql`\r\n  mutation($filename: String!, $filetype: String!) {\r\n    signS3(filename: $filename, filetype: $filetype) {\r\n      url\r\n      signedRequest\r\n    }\r\n  }\r\n`;\r\nconst NuevoProducto = () => {\r\n    \r\n\r\n    //CUSTOMHOOK PARA MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n    const { addMessage } = useAddMessage();\r\n    //CAMBIO DE SOMBRA PARA DRAG AND DROP\r\n    const [classStateBG, setClassStateBG] = useState(false);\r\n    \r\n    //CUSTOM HOOK PARA S3 UPLOAD\r\n    const { s3State, setS3State, formatFilename, uploadToS3} = useS3Upload();\r\n        //mutation\r\n        const [signS3] = useMutation(S3UPLOAD);\r\n\r\n\r\n    //Mutation\r\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\r\n        update(cache,{data:{nuevoProducto}}){\r\n            //OBtener objeto de cache\r\n            const {obtenerProductos} = cache.readQuery({query: OBTENER_PRODUCTOS});\r\n            console.log(\"Obtener productos desde update\", obtenerProductos);\r\n            \r\n            \r\n            //Reescribir cache\r\n            cache.writeQuery({\r\n                query : OBTENER_PRODUCTOS,\r\n                data : {\r\n                    obtenerProductos : [...obtenerProductos , nuevoProducto]\r\n                }\r\n            });\r\n        }\r\n    });\r\n    //Formulario para nuevos productos\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre : '',\r\n            existencia: '',\r\n            precio : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre : Yup.string()\r\n                        .required('El nombre del producto es obligatorio'),\r\n            existencia : Yup.number()\r\n                            .required('Agrega la cantidad disponible')\r\n                            .positive('No se aceptan números negativos')\r\n                            .integer('La existencia deben ser enteros'),\r\n            precio : Yup.number()\r\n                        .required('El precio es obligatorio')\r\n                        .positive(' Los números deben ser positivos')\r\n        }),\r\n        onSubmit : async valores =>{\r\n             const {nombre, existencia, precio} = valores;\r\n             \r\n             if(window !== undefined){\r\n\r\n                //UPLOAD FILE \r\n                \r\n                const response = await signS3({\r\n                    variables: {\r\n                        filename: formatFilename(s3State.file.name),\r\n                        filetype: sfile.type\r\n                    }\r\n                });\r\n\r\n                const { signedRequest, url } = response.data.signS3;\r\n                const resUpload = await uploadToS3(s3State.file, signedRequest);\r\n\r\n                console.log(\"RESPUESTA DE S3\", resUpload, \"URL\", url);\r\n                //END UPLOAD FILE \r\n\r\n                // await addMessage(`Se agregó el producto ${nombre}`);\r\n               // // const message = await addMessage(`Se agregó el producto ${nombre}`);\r\n               // // console.log(\"Mensaje desde onSubmit\", message);\r\n               // // if(message.id !== undefined){\r\n\r\n                    // try{\r\n                        \r\n                    //         //MENSAJE DE NUEVO PRODUCTO AGREGADO\r\n                    //         const producto = await nuevoProducto({\r\n                    //             variables : {\r\n                    //                 input : {\r\n                    //                     nombre,\r\n                    //                     existencia, \r\n                    //                     precio\r\n                    //                 }\r\n                    //             }\r\n                    //         })\r\n                    //         console.log(\"Producto desde nuevo Producto\", producto);\r\n                            \r\n                    //         Swal.fire(\r\n                    //             'Creado',\r\n                    //             'Se creó el producto correctamente',\r\n                    //             'success',\r\n                    //             ).then(async ()=>{\r\n                    //                 await router.push('/productos');\r\n\r\n                    //             }\r\n            \r\n                    //         )\r\n                                \r\n                    // }\r\n                    // catch (error){\r\n                    //     console.log(error)\r\n                    // }  \r\n                // }\r\n             }\r\n\r\n            \r\n            \r\n            \r\n            \r\n        }\r\n    })\r\n\r\n    //EVENTOS PARA EL UPLOAD DE LOS ARCHIVOS\r\n        //ESTADO DE LA LISTA DE IMAGENES\r\n        const [fileList, setFileList] = useState([]);\r\n\r\n        //REFERENCIA\r\n        const wrapperRef = useRef(null);\r\n\r\n    const handleDragEnter = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        wrapperRef.current.classList.add('bg-black-800')\r\n        // console.log(\"Drageado encima\");\r\n    };\r\n\r\n    const handleDragLeave = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        // wrapperRef.current.classList.remove('bg-black-800')\r\n        // console.log(\"Deja\");\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        // wrapperRef.current.classList.add(\"bg-black-800\")\r\n        setClassStateBG(true);\r\n        // console.log(\"Deja\");\r\n    };\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // console.log(e);\r\n        // wrapperRef.current.classList.remove('bg-black-800')\r\n        console.log(e.dataTransfer)\r\n        let newFile = e.dataTransfer.files[0];\r\n        setS3State({...s3State, file : newFile, name : newFile.name});\r\n\r\n        formik.setFieldValue(\"file\", newFile);\r\n\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            // onFileChange(updatedList);\r\n        }\r\n        setClassStateBG(false);\r\n    };\r\n\r\n    const onFileDrop = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        console.log(\"Se dejo aca\");\r\n        const newFile = e.target.files[0];\r\n\r\n        formik.setFieldValue(\"file\", newFile);\r\n\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            // onFileChange(updatedList);\r\n        }\r\n    }\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light \">Crear nuevo producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                        onDragEnter={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                        onDrag={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                        onDragEnd={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                        onDragLeave={(e)=>{e.preventDefault();e.stopPropagation()}}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Cantidad Disponible\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"existencia\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Cantidad Disponible\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.existencia}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.existencia && formik.errors.existencia ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.existencia}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio Producto\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.precio}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.precio}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"flex justify-center items-center w-full\" onChange={onFileDrop} ref={wrapperRef} onDragEnter={(e)=>handleDragEnter(e)} onDragOver={(e)=>handleDragOver(e)} onDragLeave={(e)=>handleDragLeave(e)} onDrop={(e)=>handleDrop(e)} >\r\n                         \r\n                            <label htmlFor=\"dropzone-file\" className={classStateBG ? \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 bg-gray-800\" : \"flex flex-col justify-center items-center w-full h-64 bg-gray-50 rounded-lg border-2 border-gray-300 border-dashed cursor-pointer dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\"} >\r\n                                <div className=\"flex flex-col justify-center items-center pt-5 pb-6\">\r\n                                    <svg aria-hidden=\"true\" className=\"mb-3 w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg>\r\n                                    <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\"><span className=\"font-semibold\">Click to upload</span> or drag and drop</p>\r\n                                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>\r\n                                </div>\r\n                                <input id=\"dropzone-file\" type=\"file\" className=\"hidden\" onChange={onFileDrop}  />\r\n                           \r\n                            </label>\r\n                        </div> \r\n\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Agregar Producto\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoProducto"]},"metadata":{},"sourceType":"module"}