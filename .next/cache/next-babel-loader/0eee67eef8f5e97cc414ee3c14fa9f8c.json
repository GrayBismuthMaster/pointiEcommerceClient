{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nconst API_URL = 'http://localhost:9000'; // const AUTENTICAR_USUARIO = gql`\n//     mutation autenticarUsuario($input:AutenticarInput)\n//     {\n//         autenticarUsuario(input:$input)\n//         {\n//             token\n//         }\n//     }\n// `;\n\nconst Login = () => {\n  //Routing \n  const router = useRouter(); //State para el mensaje\n\n  const {\n    0: mensaje,\n    1: guardarMensaje\n  } = useState(null); //Mutation para crear nuevos usuarios en Apollo\n  //Array Destructuring para el retorno del mutation de gql\n  // const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es vÃ¡lido').required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio')\n    }),\n    onSubmit: async valores => {\n      const {\n        email,\n        password\n      } = valores;\n      console.log(valores);\n\n      try {\n        const response = await fetch(`${API_URL}/login`, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n\n        if (response.ok) {\n          console.log(response);\n          const {\n            token\n          } = await response.json(); // localStorage.setItem(ACCESS_TOKEN_KEY, token);\n\n          localStorage.setItem('token', token); //redireccionar hacia clientes\n\n          setTimeout(() => {\n            guardarMensaje(null);\n            router.push('/home');\n          }, 3000);\n        }\n\n        return null;\n      } catch (error) {\n        console.log(error);\n        guardarMensaje(error.message.replace('GraphQL error : ', ''));\n        setTimeout(() => {\n          guardarMensaje(error);\n        }, 3000);\n      }\n    }\n  }); //Mostrar mensjae\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\"\n    }, __jsx(\"p\", null, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", {\n    className: \"flex justify-start mt-5 flex-col\"\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-white font-light justify-self-center ml-10 my-8\"\n  }, \"Login\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"w-full max-w-sm\"\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md ml-8 px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\"\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n  }, __jsx(\"p\", {\n    className: \"font-bold\"\n  }, \"Error\"), __jsx(\"p\", null, \" \", formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n  }, __jsx(\"p\", {\n    className: \"font-bold\"\n  }, \"Error\"), __jsx(\"p\", null, \" \", formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900\",\n    value: \"Iniciar Sesi\\xF3n\"\n  }), __jsx(Link, {\n    href: 'nuevacuenta'\n  }, __jsx(\"div\", {\n    className: \"flex bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900 justify-center content-center\"\n  }, \"Registrarse\")))))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}