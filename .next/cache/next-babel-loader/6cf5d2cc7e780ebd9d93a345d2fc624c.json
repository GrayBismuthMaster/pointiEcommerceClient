{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\pedidos.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoPedido($id : ID!, input : P){\\n        nuevoPedido(id: $id){\\n\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerPedidosVendedor{\\n        obtenerPedidosVendedor{\\n            id\\n            pedido{\\n                id\\n                cantidad\\n            }\\n            cliente\\n            vendedor\\n            total\\n            estado\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport { gql, useQuery } from '@apollo/client';\nvar OBTENER_PEDIDOS = gql(_templateObject());\nvar NUEVO_PEDIDO = gql(_templateObject2());\n\nvar pedidos = function pedidos() {\n  _s();\n\n  var _useQuery = useQuery(OBTENER_PEDIDOS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return \"cargando ...\";\n  var obtenerPedidosVendedor = data.obtenerPedidosVendedor;\n  console.log(data);\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Pedidos\"), __jsx(Link, {\n    href: \"/nuevopedido\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Nuevo Pedido\"))));\n};\n\n_s(pedidos, \"RsAoF0jGW8x/4pnnopXB/YWtfZ8=\", false, function () {\n  return [useQuery];\n});\n\nexport default pedidos;","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/pedidos.js"],"names":["Layout","Link","gql","useQuery","OBTENER_PEDIDOS","NUEVO_PEDIDO","pedidos","data","loading","error","obtenerPedidosVendedor","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;AAeA,IAAMG,YAAY,GAAGH,GAAH,oBAAlB;;AAOI,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACSH,QAAQ,CAACC,eAAD,CADjB;AAAA,MACfG,IADe,aACfA,IADe;AAAA,MACTC,OADS,aACTA,OADS;AAAA,MACAC,KADA,aACAA,KADA;;AAGtB,MAAGD,OAAH,EAAY,OAAO,cAAP;AAHU,MAIfE,sBAJe,GAIWH,IAJX,CAIfG,sBAJe;AAMtBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACI,SACA,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,6DAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAFJ,CADJ,CADA;AAaH,CApBD;;GAAMD,O;UACyBH,Q;;;AAqBnC,eAAeG,OAAf","sourcesContent":["import Layout from '../components/Layout'\r\nimport Link from 'next/link'\r\nimport { gql, useQuery } from '@apollo/client'\r\nconst OBTENER_PEDIDOS = gql`\r\n    query obtenerPedidosVendedor{\r\n        obtenerPedidosVendedor{\r\n            id\r\n            pedido{\r\n                id\r\n                cantidad\r\n            }\r\n            cliente\r\n            vendedor\r\n            total\r\n            estado\r\n        }\r\n    }\r\n`\r\nconst NUEVO_PEDIDO = gql`\r\n    mutation nuevoPedido($id : ID!, input : P){\r\n        nuevoPedido(id: $id){\r\n\r\n        }\r\n    }\r\n`\r\n    const pedidos = () => {\r\n    const {data, loading, error} = useQuery(OBTENER_PEDIDOS);\r\n    \r\n    if(loading) return \"cargando ...\";\r\n    const {obtenerPedidosVendedor} = data;\r\n\r\n    console.log(data);\r\n        return (\r\n        <>\r\n            <Layout>\r\n                <h1 className = \"text-2xl text-gray-800 font-light\">Pedidos</h1>\r\n                <Link href=\"/nuevopedido\">\r\n                    <a className='bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded '>\r\n                    Nuevo Pedido\r\n                    </a>\r\n                </Link>\r\n            </Layout>\r\n        </>\r\n    )\r\n    \r\n    }\r\n  \r\nexport default pedidos"]},"metadata":{},"sourceType":"module"}