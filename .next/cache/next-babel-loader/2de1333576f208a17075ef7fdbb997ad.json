{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\nuevocliente.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nconst NUEVO_CLIENTE = gql`\n    mutation nuevoCliente($input: ClienteInput){\n        nuevoCliente(input: $input){\n            id\n            nombre \n            apellido\n            empresa\n            email\n            telefono\n        }\n    }\n`;\nconst OBTENER_CLIENTES_USUARIO = gql`\n      query obtenerClientesVendedor {\n        obtenerClientesVendedor{\n          id\n          nombre\n          apellido\n          empresa\n          email\n        }\n      }\n`;\n\nconst NuevoCliente = () => {\n  //Router\n  const router = useRouter(); //Mutation para crear nuevos Clientes\n\n  const [nuevoCliente] = useMutation(NUEVO_CLIENTE, {\n    update(cache, {\n      data: {\n        nuevoCliente\n      }\n    }) {\n      //Obtener el objeto de cach'e que deseamos actualizar \n      const {\n        obtenerClientesVendedor\n      } = cache.readQuery({\n        query: OBTERNER\n      });\n    }\n\n  });\n  const formik = useFormik({\n    initialValues: {\n      nombre: '',\n      apellido: '',\n      empresa: '',\n      email: '',\n      telefono: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n      apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n      empresa: Yup.string().required('El campo empresa es obligatorio'),\n      email: Yup.string().email('Email no vÃ¡lido').required('El email del cliente es obligatorio')\n    }),\n    onSubmit: async valores => {\n      const {\n        nombre,\n        apellido,\n        empresa,\n        email,\n        telefono\n      } = valores;\n      console.log(valores);\n\n      try {\n        const {\n          data\n        } = await nuevoCliente({\n          variables: {\n            input: {\n              nombre,\n              apellido,\n              empresa,\n              email,\n              telefono\n            }\n          }\n        });\n        console.log(data.nuevoCliente);\n        router.push('/');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Nuevo Cliente\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.apellido,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, \"Empresa\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"empresa\",\n    type: \"text\",\n    placeholder: \"Empresa Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.empresa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  })), formik.touched.empresa && formik.errors.empresa ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.empresa)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"telefono\",\n    type: \"tel\",\n    placeholder: \"Tel\\xE9fono Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.telefono,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Registrar Cliente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }))))));\n};\n\nexport default NuevoCliente;","map":{"version":3,"sources":["D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/nuevocliente.js"],"names":["React","Layout","useFormik","Yup","gql","useMutation","useRouter","NUEVO_CLIENTE","OBTENER_CLIENTES_USUARIO","NuevoCliente","router","nuevoCliente","update","cache","data","obtenerClientesVendedor","readQuery","query","OBTERNER","formik","initialValues","nombre","apellido","empresa","email","telefono","validationSchema","object","string","required","onSubmit","valores","console","log","variables","input","push","error","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,GAAR,EAAYC,WAAZ,QAA8B,gBAA9B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,MAAMC,aAAa,GAAGH,GAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,MAAMI,wBAAwB,GAAGJ,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAWA,MAAMK,YAAY,GAAG,MAAM;AACvB;AACA,QAAMC,MAAM,GAAGJ,SAAS,EAAxB,CAFuB,CAGvB;;AACA,QAAM,CAACK,YAAD,IAAiBN,WAAW,CAACE,aAAD,EAAgB;AAC9CK,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA,IAAI,EAAC;AAAEH,QAAAA;AAAF;AAAP,KAAR,EAAiC;AACnC;AACA,YAAM;AAACI,QAAAA;AAAD,UAA4BF,KAAK,CAACG,SAAN,CAAgB;AAC9CC,QAAAA,KAAK,EAAEC;AADuC,OAAhB,CAAlC;AAGH;;AAN6C,GAAhB,CAAlC;AASA,QAAMC,MAAM,GAAGjB,SAAS,CAAC;AACrBkB,IAAAA,aAAa,EAAC;AACVC,MAAAA,MAAM,EAAC,EADG;AAEVC,MAAAA,QAAQ,EAAE,EAFA;AAGVC,MAAAA,OAAO,EAAE,EAHC;AAIVC,MAAAA,KAAK,EAAE,EAJG;AAKVC,MAAAA,QAAQ,EAAE;AALA,KADO;AAQrBC,IAAAA,gBAAgB,EAAEvB,GAAG,CAACwB,MAAJ,CAAW;AAC1BN,MAAAA,MAAM,EAAElB,GAAG,CAACyB,MAAJ,GACMC,QADN,CACe,sCADf,CADkB;AAGzBP,MAAAA,QAAQ,EAAEnB,GAAG,CAACyB,MAAJ,GACGC,QADH,CACY,wCADZ,CAHe;AAKzBN,MAAAA,OAAO,EAAEpB,GAAG,CAACyB,MAAJ,GACIC,QADJ,CACa,iCADb,CALgB;AAOzBL,MAAAA,KAAK,EAACrB,GAAG,CAACyB,MAAJ,GACOJ,KADP,CACa,iBADb,EAEOK,QAFP,CAEgB,qCAFhB;AAPmB,KAAX,CARG;AAmBrBC,IAAAA,QAAQ,EAAG,MAAMC,OAAN,IAAgB;AACvB,YAAM;AAACV,QAAAA,MAAD;AAASC,QAAAA,QAAT;AAAmBC,QAAAA,OAAnB;AAA4BC,QAAAA,KAA5B;AAAmCC,QAAAA;AAAnC,UAA+CM,OAArD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAI;AACA,cAAM;AAACjB,UAAAA;AAAD,YAAS,MAAMH,YAAY,CAAE;AAC/BuB,UAAAA,SAAS,EAAC;AACNC,YAAAA,KAAK,EAAC;AACFd,cAAAA,MADE;AAEFC,cAAAA,QAFE;AAGFC,cAAAA,OAHE;AAIFC,cAAAA,KAJE;AAKFC,cAAAA;AALE;AADA;AADqB,SAAF,CAAjC;AAWAO,QAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACH,YAAjB;AACAD,QAAAA,MAAM,CAAC0B,IAAP,CAAY,GAAZ;AACH,OAdD,CAcE,OAAOC,KAAP,EAAc;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH;AACJ;AAvCoB,GAAD,CAAxB;AA0CA,SACI,4BACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,gDADd;AAEI,IAAA,QAAQ,EAAElB,MAAM,CAACmB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,gBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEnB,MAAM,CAACoB,YAPtB;AAQK,IAAA,MAAM,EAAEpB,MAAM,CAACqB,UARpB;AASK,IAAA,KAAK,EAAIrB,MAAM,CAACsB,MAAP,CAAcpB,MAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAJJ,EAoBMF,MAAM,CAACuB,OAAP,CAAerB,MAAf,IAAyBF,MAAM,CAACwB,MAAP,CAActB,MAAvC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,MAAM,CAACwB,MAAP,CAActB,MAAnB,CAFF,CADN,GAKK,IAzBX,EA4BI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,kBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEF,MAAM,CAACoB,YAPtB;AAQK,IAAA,MAAM,EAAEpB,MAAM,CAACqB,UARpB;AASK,IAAA,KAAK,EAAIrB,MAAM,CAACsB,MAAP,CAAcnB,QAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CA5BJ,EA4CMH,MAAM,CAACuB,OAAP,CAAepB,QAAf,IAA2BH,MAAM,CAACwB,MAAP,CAAcrB,QAAzC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKH,MAAM,CAACwB,MAAP,CAAcrB,QAAnB,CAFF,CADN,GAKK,IAjDX,EAoDI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,SAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,iBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEH,MAAM,CAACoB,YAPtB;AAQK,IAAA,MAAM,EAAEpB,MAAM,CAACqB,UARpB;AASK,IAAA,KAAK,EAAIrB,MAAM,CAACsB,MAAP,CAAclB,OAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CApDJ,EAoEMJ,MAAM,CAACuB,OAAP,CAAenB,OAAf,IAA0BJ,MAAM,CAACwB,MAAP,CAAcpB,OAAxC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKJ,MAAM,CAACwB,MAAP,CAAcpB,OAAnB,CAFF,CADN,GAKK,IAzEX,EA2EI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,eAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEJ,MAAM,CAACoB,YAPtB;AAQK,IAAA,MAAM,EAAEpB,MAAM,CAACqB,UARpB;AASK,IAAA,KAAK,EAAIrB,MAAM,CAACsB,MAAP,CAAcjB,KAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CA3EJ,EA2FML,MAAM,CAACuB,OAAP,CAAelB,KAAf,IAAwBL,MAAM,CAACwB,MAAP,CAAcnB,KAAtC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKL,MAAM,CAACwB,MAAP,CAAcnB,KAAnB,CAFF,CADN,GAKK,IAhGX,EAmGI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,KAHT;AAII,IAAA,WAAW,EAAC,qBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEL,MAAM,CAACoB,YAPtB;AAQK,IAAA,MAAM,EAAEpB,MAAM,CAACqB,UARpB;AASK,IAAA,KAAK,EAAIrB,MAAM,CAACsB,MAAP,CAAchB,QAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAnGJ,EAoHI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,8EAFd;AAGI,IAAA,KAAK,EAAC,mBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApHJ,CADJ,CADJ,CAFJ,CADA,CADJ;AAqIH,CA5LD;;AA8LA,eAAehB,YAAf","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/Layout'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {gql,useMutation} from '@apollo/client'\r\nimport {useRouter} from 'next/router'\r\nconst NUEVO_CLIENTE = gql `\r\n    mutation nuevoCliente($input: ClienteInput){\r\n        nuevoCliente(input: $input){\r\n            id\r\n            nombre \r\n            apellido\r\n            empresa\r\n            email\r\n            telefono\r\n        }\r\n    }\r\n`;\r\nconst OBTENER_CLIENTES_USUARIO = gql`\r\n      query obtenerClientesVendedor {\r\n        obtenerClientesVendedor{\r\n          id\r\n          nombre\r\n          apellido\r\n          empresa\r\n          email\r\n        }\r\n      }\r\n`;\r\nconst NuevoCliente = () => {\r\n    //Router\r\n    const router = useRouter();\r\n    //Mutation para crear nuevos Clientes\r\n    const [nuevoCliente] = useMutation(NUEVO_CLIENTE, {\r\n        update(cache, { data:{ nuevoCliente}}) {\r\n            //Obtener el objeto de cach'e que deseamos actualizar \r\n            const {obtenerClientesVendedor} = cache.readQuery({\r\n                query: OBTERNER\r\n            })\r\n        }\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre:'',\r\n            apellido: '',\r\n            empresa: '',\r\n            email: '',\r\n            telefono: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n           nombre: Yup.string()\r\n                        .required('El nombre del cliente es obligatorio'),\r\n            apellido: Yup.string()\r\n                        .required('El apellido del cliente es obligatorio'),\r\n            empresa: Yup.string()\r\n                        .required('El campo empresa es obligatorio'),\r\n            email:Yup.string()\r\n                        .email('Email no vÃ¡lido')\r\n                        .required('El email del cliente es obligatorio')\r\n        }),\r\n        onSubmit : async valores =>{\r\n            const {nombre, apellido, empresa, email, telefono} = valores\r\n            console.log(valores)\r\n            try {\r\n                const {data} = await nuevoCliente ({\r\n                    variables:{\r\n                        input:{\r\n                            nombre,\r\n                            apellido,\r\n                            empresa,\r\n                            email,\r\n                            telefono\r\n                        }\r\n                    }\r\n                }) \r\n                console.log(data.nuevoCliente)\r\n                router.push('/')\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    });\r\n\r\n    return (  \r\n        <>\r\n        <Layout>\r\n            <h1 className='text-2xl text-gray-800 font-light'>Nuevo Cliente</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre Cliente\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"apellido\">\r\n                                    Apellido\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"apellido\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Apellido Cliente\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.apellido}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.apellido && formik.errors.apellido ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.apellido}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"empresa\">\r\n                                    Empresa\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"empresa\"\r\n                                    type=\"text\"\r\n                                    placeholder='Empresa Cliente'\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.empresa}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.empresa && formik.errors.empresa ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.empresa}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder='Email Cliente'\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.email}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.email && formik.errors.email ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.email}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"telefono\">\r\n                                    TelÃ©fono\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"telefono\"\r\n                                    type=\"tel\"\r\n                                    placeholder='TelÃ©fono Cliente'\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.telefono}\r\n                                />\r\n                        </div>\r\n\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Registrar Cliente\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default NuevoCliente;"]},"metadata":{},"sourceType":"module"}