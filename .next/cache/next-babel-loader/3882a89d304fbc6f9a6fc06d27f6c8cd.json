{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useRouter } from 'next/router'; //import icon from material-ui\n\nimport { NotificationsNone } from '@material-ui/icons';\nimport { MoreVertOutlined } from '@material-ui/icons';\nimport { useMessages } from '../graphql/hooks';\nconst OBTENER_USUARIO = gql`\n    query obtenerUsuario{\n        obtenerUsuario{\n            id  \n            nombre\n            apellido\n        }\n    }\n`;\n\nconst Header = () => {\n  //MENSAJES DEL SERVER POR SUBSCRIPTION\n  const {\n    messages\n  } = useMessages(); // console.log(\"Mensaje obtenido desde el server\", messages);\n\n  useEffect(() => {\n    // messages();\n    return () => {\n      console.log(\"Componente Header desmontado\");\n    };\n  }, [messages]); //Routing \n\n  const router = useRouter(); //Estado para mostrar notificaciones\n\n  const {\n    0: notificaciones,\n    1: setNotificaciones\n  } = useState(false);\n  const {\n    0: configuracion,\n    1: setConfiguracion\n  } = useState(false); //Query de Apollo\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_USUARIO);\n  console.log(data);\n  console.log(loading);\n  console.log(error); //Proteger que no accedamos a data antes de tener resultado\n\n  if (loading) return null; //Si no hay datos\n\n  if (!data) {\n    return router.push('/login');\n  } //Destructuramos obtenerUsuario\n\n\n  const {\n    nombre,\n    apellido\n  } = data.obtenerUsuario; //Cerrar SesiÃ³n\n\n  const cerrarSesion = () => {\n    localStorage.removeItem('token');\n    router.push('/login');\n  };\n\n  return __jsx(\"div\", {\n    className: \"flex justify-between mb-6\"\n  }, __jsx(\"p\", {\n    className: \"mr-2\"\n  }, \"Hola \", nombre, \" \", apellido), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"relative inline-block text-left mr-2\"\n  }, __jsx(\"div\", null, __jsx(\"button\", {\n    type: \"button\",\n    className: \"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\",\n    id: \"menu-button\",\n    \"aria-expanded\": \"true\",\n    \"aria-haspopup\": \"true\",\n    onClick: () => setNotificaciones(!notificaciones)\n  }, __jsx(NotificationsNone, null), messages.length > 0 && __jsx(\"span\", {\n    className: \"ml-1\"\n  }, messages.length))), __jsx(\"div\", {\n    className: notificaciones ? \"origin-top-right absolute right-0 mt-2 w-56 h-60 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none overflow-y-auto scrollbar\" : 'hidden',\n    role: \"menu\",\n    \"aria-orientation\": \"vertical\",\n    \"aria-labelledby\": \"menu-button\",\n    tabIndex: \"-1\",\n    onPointerLeave: () => setNotificaciones(!notificaciones)\n  }, __jsx(\"div\", {\n    className: notificaciones ? \"py-1\" : \"hidden\",\n    role: \"none\"\n  }, messages.map(message => __jsx(\"div\", {\n    key: message.id,\n    className: \"flex items-center px-4 py-2\"\n  }, __jsx(\"div\", {\n    className: \"flex-shrink-0\"\n  }, __jsx(\"div\", {\n    className: \"flex items-center justify-center h-12 w-12 rounded-md bg-indigo-500 text-white\"\n  }, __jsx(\"svg\", {\n    className: \"h-6 w-6\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a1 1 0 012 0v3.158a2.032 2.032 0 01-1.095 1.396L15 17z\"\n  }), __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n  })))), __jsx(\"div\", {\n    className: \"ml-3\"\n  }, __jsx(\"p\", {\n    className: \"text-sm leading-5 font-medium text-gray-900\"\n  }, message.text))))))), __jsx(\"div\", {\n    className: \"relative inline-block text-left\"\n  }, __jsx(\"div\", null, __jsx(\"button\", {\n    type: \"button\",\n    className: \"inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\",\n    id: \"menu-button\",\n    \"aria-expanded\": \"true\",\n    \"aria-haspopup\": \"true\",\n    onClick: () => setConfiguracion(!configuracion) // onClick={()=>cerrarSesion()}\n\n  }, __jsx(MoreVertOutlined, null))), __jsx(\"div\", {\n    className: configuracion ? \"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\" : 'hidden',\n    role: \"menu\",\n    \"aria-orientation\": \"vertical\",\n    \"aria-labelledby\": \"menu-button\",\n    tabIndex: \"-1\",\n    onPointerLeave: () => setConfiguracion(!configuracion)\n  }, __jsx(\"div\", {\n    className: configuracion ? \"py-1\" : \"hidden\",\n    role: \"none\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"text-gray-700 block px-4 py-2 text-sm\",\n    role: \"menuitem\",\n    tabIndex: \"-1\",\n    id: \"menu-item-0\"\n  }, \"Account settings\"), __jsx(\"a\", {\n    href: \"#\",\n    className: \"text-gray-700 block px-4 py-2 text-sm\",\n    role: \"menuitem\",\n    tabIndex: \"-1\",\n    id: \"menu-item-1\"\n  }, \"Support\"), __jsx(\"a\", {\n    href: \"#\",\n    className: \"text-gray-700 block px-4 py-2 text-sm\",\n    role: \"menuitem\",\n    tabIndex: \"-1\",\n    id: \"menu-item-2\"\n  }, \"License\"), __jsx(\"button\", {\n    className: \"text-gray-700 block w-full text-left px-4 py-2 text-sm\",\n    role: \"menuitem\",\n    tabIndex: \"-1\",\n    id: \"menu-item-3\",\n    onClick: () => cerrarSesion()\n  }, \"Cerrar sesi\\xF3n\"))))));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}