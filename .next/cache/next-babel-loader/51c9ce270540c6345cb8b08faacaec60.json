{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nvar API_URL = 'http://localhost:9000'; // const AUTENTICAR_USUARIO = gql`\n//     mutation autenticarUsuario($input:AutenticarInput)\n//     {\n//         autenticarUsuario(input:$input)\n//         {\n//             token\n//         }\n//     }\n// `;\n\nvar Login = function Login() {\n  //Routing \n  var router = useRouter(); //State para el mensaje\n\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      guardarMensaje = _useState[1]; //Mutation para crear nuevos usuarios en Apollo\n  //Array Destructuring para el retorno del mutation de gql\n  // const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\n\n\n  var formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es v√°lido').required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(valores) {\n        var email, password, response, _yield$response$json, token;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                email = valores.email, password = valores.password;\n                console.log(valores);\n                _context.prev = 2;\n                _context.next = 5;\n                return fetch(\"\".concat(API_URL, \"/login\"), {\n                  method: 'POST',\n                  headers: {\n                    'content-type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    email: email,\n                    password: password\n                  })\n                });\n\n              case 5:\n                response = _context.sent;\n\n                if (!response.ok) {\n                  _context.next = 14;\n                  break;\n                }\n\n                console.log(response);\n                _context.next = 10;\n                return response.json();\n\n              case 10:\n                _yield$response$json = _context.sent;\n                token = _yield$response$json.token;\n                // localStorage.setItem(ACCESS_TOKEN_KEY, token);\n                localStorage.setItem('token', token); //redireccionar hacia clientes\n\n                setTimeout(function () {\n                  guardarMensaje(null);\n                  router.push('/home');\n                }, 3000);\n\n              case 14:\n                return _context.abrupt(\"return\", null);\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n                guardarMensaje(_context.t0.message.replace('GraphQL error : ', ''));\n                setTimeout(function () {\n                  guardarMensaje(_context.t0);\n                }, 3000);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 17]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }); //Mostrar mensjae\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\"\n    }, __jsx(\"p\", null, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", {\n    className: \"flex justify-start mt-5 flex-col\"\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-white font-light justify-self-center ml-10 my-8\"\n  }, \"Login\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"w-full max-w-sm\"\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md ml-8 px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit\n  }, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\"\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n  }, __jsx(\"p\", {\n    className: \"font-bold\"\n  }, \"Error\"), __jsx(\"p\", null, \" \", formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\"\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n  }, __jsx(\"p\", {\n    className: \"font-bold\"\n  }, \"Error\"), __jsx(\"p\", null, \" \", formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900\",\n    value: \"Iniciar Sesi\\xF3n\"\n  }), __jsx(Link, {\n    href: 'nuevacuenta'\n  }, __jsx(\"div\", {\n    className: \"flex bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900 justify-center content-center\"\n  }, \"Registrarse\")))))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}