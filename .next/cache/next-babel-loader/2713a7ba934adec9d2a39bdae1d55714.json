{"ast":null,"code":"import _regeneratorRuntime from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toArray from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _taggedTemplateLiteral from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\nuevopedido.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoPedido($input : PedidoInput){\\n      nuevoPedido(input : $input){\\n        id\\n      }\\n    }    \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport Layout from '../components/Layout';\nimport AsignarCliente from '../components/pedidos/AsignarCliente';\nimport AsignarProductos from '../components/pedidos/AsignarProductos';\nimport ResumenPedido from '../components/pedidos/ResumenPedido';\nimport Total from '../components/pedidos/Total';\nimport { gql, useMutation } from '@apollo/client'; //Context de Pedidos\n\nimport PedidoContext from '../context/pedidos/PedidoContext';\nvar NUEVO_PEDIDO = gql(_templateObject());\n\nvar NuevoPedido = function NuevoPedido() {\n  _s();\n\n  //Utilizar context y extraer sus funciones\n  var pedidoContext = useContext(PedidoContext); // console.log(pedidoContext);\n  // const {holaMundoEnUseReducer} = pedidoContext\n  // holaMundoEnUseReducer();\n\n  var cliente = pedidoContext.cliente,\n      productos = pedidoContext.productos,\n      total = pedidoContext.total;\n  var id = cliente.id; //Mutation para nuevo Pedido\n\n  var _useMutation = useMutation(NUEVO_PEDIDO),\n      _useMutation2 = _toArray(_useMutation);\n\n  var validarPedido = function validarPedido() {\n    return !productos.every(function (producto) {\n      return producto.cantidad > 0;\n    }) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed\" : \"\";\n  };\n\n  var crearNuevoPedido = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var pedido, _yield$NuevoPedido, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //Remover atributos que no van \n              pedido = productos.map(function (_ref2) {\n                var existencia = _ref2.existencia;\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return NuevoPedido({\n                variables: {\n                  cliente: id,\n                  total: total\n                }\n              });\n\n            case 4:\n              _yield$NuevoPedido = _context.sent;\n              data = _yield$NuevoPedido.data;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function crearNuevoPedido() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(AsignarCliente, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), __jsx(AsignarProductos, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(ResumenPedido, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(Total, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-700 \".concat(validarPedido()),\n    onClick: crearNuevoPedido,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Registrar Pedido\"))));\n};\n\n_s(NuevoPedido, \"Hbrt93ooP6yoB+d6r6dKIxLSLG8=\", false, function () {\n  return [useMutation];\n});\n\n_c = NuevoPedido;\nexport default NuevoPedido;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoPedido\");","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/nuevopedido.js"],"names":["React","useContext","Layout","AsignarCliente","AsignarProductos","ResumenPedido","Total","gql","useMutation","PedidoContext","NUEVO_PEDIDO","NuevoPedido","pedidoContext","cliente","productos","total","id","validarPedido","every","producto","cantidad","length","crearNuevoPedido","pedido","map","existencia","variables","data","console","log"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport Layout from '../components/Layout'\r\nimport AsignarCliente from '../components/pedidos/AsignarCliente'\r\nimport AsignarProductos from '../components/pedidos/AsignarProductos'\r\nimport ResumenPedido from '../components/pedidos/ResumenPedido'\r\nimport Total from '../components/pedidos/Total'\r\nimport {gql, useMutation} from '@apollo/client'\r\n//Context de Pedidos\r\nimport PedidoContext from '../context/pedidos/PedidoContext'\r\n\r\nconst NUEVO_PEDIDO = gql`\r\n    mutation nuevoPedido($input : PedidoInput){\r\n      nuevoPedido(input : $input){\r\n        id\r\n      }\r\n    }    \r\n`\r\nconst NuevoPedido = () => {\r\n  //Utilizar context y extraer sus funciones\r\n  const pedidoContext = useContext(PedidoContext);\r\n  // console.log(pedidoContext);\r\n  // const {holaMundoEnUseReducer} = pedidoContext\r\n  // holaMundoEnUseReducer();\r\n  const {cliente, productos, total} = pedidoContext;\r\n  const { id} = cliente;\r\n  //Mutation para nuevo Pedido\r\n  const [] = useMutation(NUEVO_PEDIDO);\r\n\r\n  const validarPedido = () => {\r\n    return !productos.every(producto => producto.cantidad > 0 ) || total === 0 || cliente.length === 0? \" opacity-50 cursor-not-allowed\" :\"\" ;\r\n  }\r\n  const crearNuevoPedido = async ()=>{\r\n    //Remover atributos que no van \r\n    const pedido = productos.map(({existencia,})=>{\r\n\r\n    })\r\n    try{\r\n      const {data} = await NuevoPedido({\r\n        variables : {\r\n          cliente : id,\r\n          total\r\n        }\r\n      })\r\n    }catch(error){\r\n      console.log(error)\r\n    }\r\n  }\r\n  return (\r\n    <Layout>\r\n        <h1 className='text-2xl text-gray-800 font-light'></h1>\r\n        \r\n        <div className='flex justify-center mt-5'>\r\n          <div className='w-full max-w-lg'>\r\n            <AsignarCliente/>\r\n            <AsignarProductos/> \r\n            <ResumenPedido/>\r\n            <Total/>\r\n            <button\r\n              type='button'\r\n              className={`bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-700 ${validarPedido()}`}\r\n              onClick = {crearNuevoPedido}\r\n            >\r\n              Registrar Pedido\r\n            </button>\r\n          </div>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoPedido"]},"metadata":{},"sourceType":"module"}