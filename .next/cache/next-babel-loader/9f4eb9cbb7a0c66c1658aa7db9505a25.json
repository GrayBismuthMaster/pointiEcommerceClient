{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerClientesVendedor {\\n    obtenerClientesVendedor {\\n      id\\n      nombre\\n      apellido\\n      empresa\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nvar OBTENER_CLIENTES_USUARIO = gql(_templateObject());\n\nvar AsignarCliente = function AsignarCliente() {\n  var _useState = useState([]),\n      cliente = _useState[0],\n      setClientes = _useState[1]; //Context e pedidos\n\n\n  var pedidoContext = useContext(PedidoContext);\n  var agregarCliente = pedidoContext.agregarCliente; //COnsultar la base de datos\n\n  var _useQuery = useQuery(OBTENER_CLIENTES_USUARIO),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  console.log(data);\n  useEffect(function () {\n    agregarCliente(cliente);\n    return function () {};\n  }, [cliente]);\n\n  var seleccionarCliente = function seleccionarCliente(clientes) {\n    setClientes(clientes);\n  };\n\n  if (loading) return \"cargando ...\";\n  var obtenerClientesVendedor = data.obtenerClientesVendedor;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\"\n  }, \"1.- Asigna un cliente al pedido\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerClientesVendedor,\n    onChange: function onChange(option) {\n      return seleccionarCliente(option);\n    },\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return opciones.nombre;\n    },\n    placeholder: 'Seleccione el cliente',\n    noOptionsMessage: \"NO hay ese cliente\"\n  }));\n};\n\nexport default AsignarCliente;","map":null,"metadata":{},"sourceType":"module"}