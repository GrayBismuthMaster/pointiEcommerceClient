{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS, ACTUALIZAR_TOTAL } from '../../types';\n\nconst PedidoReducer = (state, action) => {\n  switch (action.type) {\n    case SELECCIONAR_CLIENTE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cliente: action.payload\n      });\n\n    case SELECCIONAR_PRODUCTO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productos: action.payload\n      });\n\n    case CANTIDAD_PRODUCTOS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productos: state.productos.map(producto => producto.id === action.payload.id ? producto = action.payload : producto)\n      });\n\n    case ACTUALIZAR_TOTAL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.productos.reduce((nuevoTotal, articulo) => nuevoTotal += articulo.precio * articulo.cantidad, 0)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default PedidoReducer;","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/context/pedidos/PedidoReducer.js"],"names":["SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","CANTIDAD_PRODUCTOS","ACTUALIZAR_TOTAL","PedidoReducer","state","action","type","cliente","payload","productos","map","producto","id","total","reduce","nuevoTotal","articulo","precio","cantidad"],"mappings":";;;;;;AAAA,SACIA,mBADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,gBAJJ,QAKO,aALP;;AAOA,MAAMC,aAAa,GAAI,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,mBAAL;AACI,6CACOK,KADP;AAEIG,QAAAA,OAAO,EAAGF,MAAM,CAACG;AAFrB;;AAIJ,SAAKR,oBAAL;AACI,6CACOI,KADP;AAEIK,QAAAA,SAAS,EAAGJ,MAAM,CAACG;AAFvB;;AAIJ,SAAKP,kBAAL;AACI,6CACOG,KADP;AAEIK,QAAAA,SAAS,EAAGL,KAAK,CAACK,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACG,OAAP,CAAeI,EAA/B,GAAoCD,QAAQ,GAAGN,MAAM,CAACG,OAAtD,GAAgEG,QAAhG;AAFhB;;AAIJ,SAAKT,gBAAL;AACI,6CACOE,KADP;AAEIS,QAAAA,KAAK,EAAGT,KAAK,CAACK,SAAN,CAAgBK,MAAhB,CAAuB,CAACC,UAAD,EAAaC,QAAb,KAA0BD,UAAU,IAAIC,QAAQ,CAACC,MAAT,GAAkBD,QAAQ,CAACE,QAA1F,EAAoG,CAApG;AAFZ;;AAIJ;AACA,aAAOd,KAAP;AAtBJ;AAwBH,CAzBD;;AA0BA,eAAeD,aAAf","sourcesContent":["import {\r\n    SELECCIONAR_CLIENTE,\r\n    SELECCIONAR_PRODUCTO,\r\n    CANTIDAD_PRODUCTOS, \r\n    ACTUALIZAR_TOTAL\r\n} from '../../types'\r\n\r\nconst PedidoReducer =  (state, action) => {\r\n    switch(action.type){\r\n        case SELECCIONAR_CLIENTE :\r\n            return {\r\n                ...state, \r\n                cliente : action.payload\r\n            }\r\n        case SELECCIONAR_PRODUCTO : \r\n            return {\r\n                ...state,\r\n                productos : action.payload\r\n            }\r\n        case CANTIDAD_PRODUCTOS : \r\n            return {\r\n                ...state,\r\n                productos : state.productos.map(producto => producto.id === action.payload.id ? producto = action.payload : producto)\r\n            }\r\n        case ACTUALIZAR_TOTAL : \r\n            return {\r\n                ...state,\r\n                total : state.productos.reduce((nuevoTotal, articulo) => nuevoTotal += articulo.precio * articulo.cantidad, 0)\r\n            }\r\n        default : \r\n        return state;\r\n    }\r\n}\r\nexport default PedidoReducer;"]},"metadata":{},"sourceType":"module"}