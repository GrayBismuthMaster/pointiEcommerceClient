{"ast":null,"code":"import _regeneratorRuntime from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\nuevoproducto.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProductos{\\n        obtenerProductos{\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoProducto($input : ProductoInput){\\n        nuevoProducto(input : $input){\\n            id\\n            nombre\\n            existencia\\n            precio\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nimport router from 'next/router';\nvar NUEVO_PRODUCTO = gql(_templateObject());\nvar OBTENER_PRODUCTOS = gql(_templateObject2());\n\nvar NuevoProducto = function NuevoProducto() {\n  _s();\n\n  //Mutation\n  var _useMutation = useMutation(NUEVO_PRODUCTO, {}),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoProducto = _useMutation2[0]; //Formulario para nuevos productos\n\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      existencia: '',\n      precio: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del producto es obligatorio'),\n      existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser enteros'),\n      precio: Yup.number().required('El precio es obligatorio').positive(' Los números deben ser positivos')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(valores) {\n        var nombre, existencia, precio, _yield$nuevoProducto, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n                _context.prev = 1;\n                _context.next = 4;\n                return nuevoProducto({\n                  variables: {\n                    input: {\n                      nombre: nombre,\n                      existencia: existencia,\n                      precio: precio\n                    }\n                  }\n                });\n\n              case 4:\n                _yield$nuevoProducto = _context.sent;\n                data = _yield$nuevoProducto.data;\n                console.log(data);\n                Swal.fire('Creado', 'Se creó el producto correctamente', 'success');\n                router.push('/productos');\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Crear nuevo producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.precio)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(NuevoProducto, \"N6eE8jYwYGdCN3IvQmgZaBPkCyc=\", false, function () {\n  return [useMutation, useFormik];\n});\n\n_c = NuevoProducto;\nexport default NuevoProducto;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoProducto\");","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/nuevoproducto.js"],"names":["Link","React","Layout","useFormik","Yup","gql","useMutation","Swal","router","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","NuevoProducto","nuevoProducto","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","variables","input","data","console","log","fire","push","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,GAAR,EAAaC,WAAb,QAA+B,gBAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,cAAc,GAAGJ,GAAH,mBAApB;AAUA,IAAMK,iBAAiB,GAAGL,GAAH,oBAAvB;;AAWA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACxB;AADwB,qBAEAL,WAAW,CAACG,cAAD,EAAiB,EAAjB,CAFX;AAAA;AAAA,MAEjBG,aAFiB,qBAKxB;;;AACA,MAAMC,MAAM,GAAGV,SAAS,CAAC;AACrBW,IAAAA,aAAa,EAAC;AACVC,MAAAA,MAAM,EAAG,EADC;AAEVC,MAAAA,UAAU,EAAE,EAFF;AAGVC,MAAAA,MAAM,EAAG;AAHC,KADO;AAMrBC,IAAAA,gBAAgB,EAAGd,GAAG,CAACe,MAAJ,CAAW;AAC1BJ,MAAAA,MAAM,EAAGX,GAAG,CAACgB,MAAJ,GACIC,QADJ,CACa,uCADb,CADiB;AAG1BL,MAAAA,UAAU,EAAGZ,GAAG,CAACkB,MAAJ,GACID,QADJ,CACa,+BADb,EAEIE,QAFJ,CAEa,iCAFb,EAGIC,OAHJ,CAGY,iCAHZ,CAHa;AAO1BP,MAAAA,MAAM,EAAGb,GAAG,CAACkB,MAAJ,GACID,QADJ,CACa,0BADb,EAEIE,QAFJ,CAEa,kCAFb;AAPiB,KAAX,CANE;AAiBrBE,IAAAA,QAAQ;AAAA,+EAAG,iBAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCX,gBAAAA,MADD,GAC+BW,OAD/B,CACCX,MADD,EACSC,UADT,GAC+BU,OAD/B,CACSV,UADT,EACqBC,MADrB,GAC+BS,OAD/B,CACqBT,MADrB;AAAA;AAAA;AAAA,uBAGkBL,aAAa,CAAC;AAC/Be,kBAAAA,SAAS,EAAG;AACRC,oBAAAA,KAAK,EAAG;AACJb,sBAAAA,MAAM,EAANA,MADI;AAEJC,sBAAAA,UAAU,EAAVA,UAFI;AAGJC,sBAAAA,MAAM,EAANA;AAHI;AADA;AADmB,iBAAD,CAH/B;;AAAA;AAAA;AAGIY,gBAAAA,IAHJ,wBAGIA,IAHJ;AAYHC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAtB,gBAAAA,IAAI,CAACyB,IAAL,CACI,QADJ,EAEI,mCAFJ,EAGI,SAHJ;AAKAxB,gBAAAA,MAAM,CAACyB,IAAP,CAAY,YAAZ;AAlBG;AAAA;;AAAA;AAAA;AAAA;AAoBHH,gBAAAA,OAAO,CAACC,GAAR;;AApBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjBa,GAAD,CAAxB;AAyCF,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEQ;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,gDADd;AAEI,IAAA,QAAQ,EAAElB,MAAM,CAACqB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,QAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAErB,MAAM,CAACsB,YAPtB;AAQK,IAAA,MAAM,EAAEtB,MAAM,CAACuB,UARpB;AASK,IAAA,KAAK,EAAIvB,MAAM,CAACwB,MAAP,CAActB,MAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAJJ,EAoBMF,MAAM,CAACyB,OAAP,CAAevB,MAAf,IAAyBF,MAAM,CAAC0B,MAAP,CAAcxB,MAAvC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,MAAM,CAAC0B,MAAP,CAAcxB,MAAnB,CAFF,CADN,GAKK,IAzBX,EA2BI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,YAFP;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,WAAW,EAAC,qBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEF,MAAM,CAACsB,YAPtB;AAQK,IAAA,MAAM,EAAEtB,MAAM,CAACuB,UARpB;AASK,IAAA,KAAK,EAAIvB,MAAM,CAACwB,MAAP,CAAcrB,UAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CA3BJ,EA2CMH,MAAM,CAACyB,OAAP,CAAetB,UAAf,IAA6BH,MAAM,CAAC0B,MAAP,CAAcvB,UAA3C,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKH,MAAM,CAAC0B,MAAP,CAAcvB,UAAnB,CAFF,CADN,GAKK,IAhDX,EAkDI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,EAIQ;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,WAAW,EAAC,iBAJhB,CAKI;AALJ;AAOK,IAAA,QAAQ,EAAEH,MAAM,CAACsB,YAPtB;AAQK,IAAA,MAAM,EAAEtB,MAAM,CAACuB,UARpB;AASK,IAAA,KAAK,EAAIvB,MAAM,CAACwB,MAAP,CAAcpB,MAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CAlDJ,EAkEMJ,MAAM,CAACyB,OAAP,CAAerB,MAAf,IAAyBJ,MAAM,CAAC0B,MAAP,CAActB,MAAvC,GACM;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKJ,MAAM,CAAC0B,MAAP,CAActB,MAAnB,CAFF,CADN,GAKK,IAvEX,EAyEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,8EAFd;AAGI,IAAA,KAAK,EAAC,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzEJ,CADJ,CADJ,CAFR,CADF;AAwFD,CAvID;;GAAMN,a;UAEsBL,W,EAITH,S;;;KANbQ,a;AAyIN,eAAeA,aAAf","sourcesContent":["import Link from 'next/link';\r\nimport React from 'react';\r\nimport Layout from '../components/Layout';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport Swal from 'sweetalert2'\r\nimport router from 'next/router';\r\n\r\nconst NUEVO_PRODUCTO = gql`\r\n    mutation nuevoProducto($input : ProductoInput){\r\n        nuevoProducto(input : $input){\r\n            id\r\n            nombre\r\n            existencia\r\n            precio\r\n        }\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\n\r\nconst NuevoProducto = () => {\r\n    //Mutation\r\n    const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\r\n        \r\n    });\r\n    //Formulario para nuevos productos\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre : '',\r\n            existencia: '',\r\n            precio : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            nombre : Yup.string()\r\n                        .required('El nombre del producto es obligatorio'),\r\n            existencia : Yup.number()\r\n                            .required('Agrega la cantidad disponible')\r\n                            .positive('No se aceptan números negativos')\r\n                            .integer('La existencia deben ser enteros'),\r\n            precio : Yup.number()\r\n                        .required('El precio es obligatorio')\r\n                        .positive(' Los números deben ser positivos')\r\n        }),\r\n        onSubmit : async valores =>{\r\n             const {nombre, existencia, precio} = valores;\r\n            try{\r\n                const {data} = await nuevoProducto({\r\n                    variables : {\r\n                        input : {\r\n                            nombre,\r\n                            existencia, \r\n                            precio\r\n                        }\r\n                    }\r\n                })\r\n                console.log(data);\r\n                Swal.fire(\r\n                    'Creado',\r\n                    'Se creó el producto correctamente',\r\n                    'success'\r\n                )\r\n                router.push('/productos');\r\n            } catch (error){\r\n                console.log(error)\r\n            }\r\n        }\r\n    })\r\n  return (\r\n    <Layout>\r\n        <h1 className = \"text-2xl text-gray-800 font-light \">Crear nuevo producto</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit={formik.handleSubmit}\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Cantidad Disponible\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"existencia\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Cantidad Disponible\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.existencia}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.existencia && formik.errors.existencia ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.existencia}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"precio\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio Producto\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.precio}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.precio && formik.errors.precio ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.precio}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Agregar Producto\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NuevoProducto"]},"metadata":{},"sourceType":"module"}