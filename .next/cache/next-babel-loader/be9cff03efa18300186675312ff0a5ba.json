{"ast":null,"code":"import _regeneratorRuntime from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\nuevocliente.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation nuevoCliente($input: ClienteInput){\\n        nuevoCliente(input: $input){\\n            id\\n            nombre \\n            apellido\\n            empresa\\n            email\\n            telefono\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nvar NUEVO_CLIENTE = gql(_templateObject());\n\nvar NuevoCliente = function NuevoCliente() {\n  _s();\n\n  //Mutation para crear nuevos Clientes\n  var _useMutation = useMutation(NUEVO_CLIENTE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoCliente = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      apellido: '',\n      empresa: '',\n      email: '',\n      telefono: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n      apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n      empresa: Yup.string().required('El campo empresa es obligatorio'),\n      email: Yup.string().email('Email no v√°lido').required('El email del cliente es obligatorio')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(valores) {\n        var nombre, apellido, empresa, email, telefono, _yield$nuevoCliente, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                nombre = valores.nombre, apellido = valores.apellido, empresa = valores.empresa, email = valores.email, telefono = valores.telefono;\n                console.log(valores);\n                _context.prev = 2;\n                _context.next = 5;\n                return nuevoCliente({\n                  variables: {\n                    input: {\n                      nombre: nombre,\n                      apellido: apellido,\n                      empresa: empresa,\n                      email: email,\n                      telefono: telefono\n                    }\n                  }\n                });\n\n              case 5:\n                _yield$nuevoCliente = _context.sent;\n                data = _yield$nuevoCliente.data;\n                console.log(data.nuevoCliente);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Nuevo Cliente\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.apellido,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"empresa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, \"Empresa\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"empresa\",\n    type: \"text\",\n    placeholder: \"Empresa Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.empresa,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  })), formik.touched.empresa && formik.errors.empresa ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.empresa)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"telefono\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"telefono\",\n    type: \"tel\",\n    placeholder: \"Tel\\xE9fono Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.telefono,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Registrar Cliente\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }))))));\n};\n\n_s(NuevoCliente, \"7btkJII6L5lDi3kQfpyhL69hJaU=\", false, function () {\n  return [useMutation, useFormik];\n});\n\n_c = NuevoCliente;\nexport default NuevoCliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"NuevoCliente\");","map":{"version":3,"sources":["D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/nuevocliente.js"],"names":["React","Layout","useFormik","Yup","gql","useMutation","NUEVO_CLIENTE","NuevoCliente","nuevoCliente","formik","initialValues","nombre","apellido","empresa","email","telefono","validationSchema","object","string","required","onSubmit","valores","console","log","variables","input","data","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/Layout'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {gql,useMutation} from '@apollo/client'\r\n\r\nconst NUEVO_CLIENTE = gql `\r\n    mutation nuevoCliente($input: ClienteInput){\r\n        nuevoCliente(input: $input){\r\n            id\r\n            nombre \r\n            apellido\r\n            empresa\r\n            email\r\n            telefono\r\n        }\r\n    }\r\n`;\r\nconst NuevoCliente = () => {\r\n    //Mutation para crear nuevos Clientes\r\n    const [nuevoCliente] = useMutation(NUEVO_CLIENTE)\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre:'',\r\n            apellido: '',\r\n            empresa: '',\r\n            email: '',\r\n            telefono: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n           nombre: Yup.string()\r\n                        .required('El nombre del cliente es obligatorio'),\r\n            apellido: Yup.string()\r\n                        .required('El apellido del cliente es obligatorio'),\r\n            empresa: Yup.string()\r\n                        .required('El campo empresa es obligatorio'),\r\n            email:Yup.string()\r\n                        .email('Email no v√°lido')\r\n                        .required('El email del cliente es obligatorio')\r\n        }),\r\n        onSubmit : async valores =>{\r\n            const {nombre, apellido, empresa, email, telefono} = valores\r\n            console.log(valores)\r\n            try {\r\n                const {data} = await nuevoCliente ({\r\n                    variables:{\r\n                        input:{\r\n                            nombre,\r\n                            apellido,\r\n                            empresa,\r\n                            email,\r\n                            telefono\r\n                        }\r\n                    }\r\n                }) \r\n                console.log(data.nuevoCliente)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    });\r\n\r\n    return (  \r\n        <>\r\n        <Layout>\r\n            <h1 className='text-2xl text-gray-800 font-light'>Nuevo Cliente</h1>\r\n            <div className='flex justify-center mt-5'>\r\n                <div className='w-full max-w-lg'>\r\n                    <form\r\n                        className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                        onSubmit=\"\"\r\n                    >\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"nombre\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre Cliente\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.nombre}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.nombre && formik.errors.nombre ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.nombre}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"apellido\">\r\n                                    Apellido\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"apellido\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Apellido Cliente\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.apellido}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.apellido && formik.errors.apellido ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.apellido}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"empresa\">\r\n                                    Empresa\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"empresa\"\r\n                                    type=\"text\"\r\n                                    placeholder='Empresa Cliente'\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.empresa}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.empresa && formik.errors.empresa ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.empresa}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder='Email Cliente'\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.email}\r\n                                />\r\n                        </div>\r\n                        { formik.touched.email && formik.errors.email ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.email}</p>  \r\n                                </div>\r\n                            ): null\r\n                        }\r\n\r\n                        <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"telefono\">\r\n                                    Tel√©fono\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"telefono\"\r\n                                    type=\"tel\"\r\n                                    placeholder='Tel√©fono Cliente'\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    \r\n                                     onChange={formik.handleChange}\r\n                                     onBlur={formik.handleBlur}\r\n                                     value = {formik.values.telefono}\r\n                                />\r\n                        </div>\r\n\r\n                        <input\r\n                            type='submit'\r\n                            className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                            value=\"Registrar Cliente\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default NuevoCliente;"]},"metadata":{},"sourceType":"module"}