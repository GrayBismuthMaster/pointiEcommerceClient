{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\pedidos.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport { gql, useQuery } from '@apollo/client';\nimport Pedido from '../components/pedidos/Pedido';\nconst OBTENER_PEDIDOS = gql`\n    query obtenerPedidosVendedor{\n        obtenerPedidosVendedor{\n            id\n            pedido{\n                id\n                cantidad\n            }\n            cliente\n            vendedor\n            total\n            estado\n        }\n    }\n`;\n\nconst pedidos = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PEDIDOS);\n  if (loading) return \"cargando .... \";\n  const {\n    obtenerPedidosVendedor\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Pedidos\"), __jsx(Link, {\n    href: \"/nuevopedido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    className: \"bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Nuevo Pedido\")), obtenerPedidosVendedor.length === 0 ? __jsx(\"p\", {\n    className: \"mt-5 text-center text-2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"No hay pedidos a\\xFAn\") : obtenerPedidosVendedor.map(pedido => __jsx(Pedido, {\n    key: pedido.id,\n    pedido: pedido,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }))));\n};\n\nexport default pedidos;","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/pedidos.js"],"names":["Layout","Link","gql","useQuery","Pedido","OBTENER_PEDIDOS","pedidos","data","loading","error","obtenerPedidosVendedor","length","map","pedido","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,MAAMC,eAAe,GAAGH,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAeI,MAAMI,OAAO,GAAG,MAAM;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBN,QAAQ,CAACE,eAAD,CAAvC;AACA,MAAGG,OAAH,EAAY,OAAO,gBAAP;AACZ,QAAK;AAACE,IAAAA;AAAD,MAA2BH,IAAhC;AACI,SACA,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAG,mCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,6DAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAFJ,EAQQG,sBAAsB,CAACC,MAAvB,KAAkC,CAAlC,GAGI;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,GAOID,sBAAsB,CAACE,GAAvB,CAA2BC,MAAM,IAC7B,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAIA,MAAM,CAACC,EAAtB;AAA0B,IAAA,MAAM,EAAID,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfZ,CADJ,CADA;AA0BH,CA9BD;;AAgCJ,eAAeP,OAAf","sourcesContent":["import Layout from '../components/Layout'\r\nimport Link from 'next/link'\r\nimport { gql, useQuery } from '@apollo/client'\r\nimport Pedido from '../components/pedidos/Pedido'\r\nconst OBTENER_PEDIDOS = gql`\r\n    query obtenerPedidosVendedor{\r\n        obtenerPedidosVendedor{\r\n            id\r\n            pedido{\r\n                id\r\n                cantidad\r\n            }\r\n            cliente\r\n            vendedor\r\n            total\r\n            estado\r\n        }\r\n    }\r\n`\r\n    const pedidos = () => {\r\n    const {data, loading, error} = useQuery(OBTENER_PEDIDOS);\r\n    if(loading) return \"cargando .... \"\r\n    const{obtenerPedidosVendedor} = data;\r\n        return (\r\n        <>\r\n            <Layout>\r\n                <h1 className = \"text-2xl text-gray-800 font-light\">Pedidos</h1>\r\n                <Link href=\"/nuevopedido\">\r\n                    <a className='bg-blue-800 py-2 px-5 mt-3 inline-block text-white rounded '>\r\n                    Nuevo Pedido\r\n                    </a>\r\n                </Link>\r\n                {\r\n                    obtenerPedidosVendedor.length === 0\r\n                        ?\r\n                    (\r\n                        <p className='mt-5 text-center text-2xl'>No hay pedidos a√∫n</p>\r\n                    )\r\n                        :\r\n                    (\r\n                        obtenerPedidosVendedor.map(pedido => (\r\n                            <Pedido key = {pedido.id} pedido = {pedido}/>\r\n                        ))\r\n                    )\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n    \r\n    }\r\n  \r\nexport default pedidos"]},"metadata":{},"sourceType":"module"}