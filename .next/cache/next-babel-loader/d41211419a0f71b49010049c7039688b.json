{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from \"moment\";\nexport var useS3Upload = function useS3Upload() {\n  _s();\n\n  var _useState = useState({\n    name: \"\",\n    file: \"\"\n  }),\n      s3State = _useState[0],\n      setS3State = _useState[1];\n\n  var uploadToS3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file, signedRequest) {\n      var options, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = {\n                headers: {\n                  \"Content-Type\": file.type,\n                  \"Access-Control-Allow-Headers\": \"Content-Type\",\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\"\n                }\n              };\n              _context.next = 3;\n              return axios.put(signedRequest, file, options);\n\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadToS3(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formatFilename = function formatFilename(filename) {\n    var date = moment().format(\"YYYYMMDD\");\n    var randomString = Math.random().toString(36).substring(2, 7);\n    var cleanFileName = filename.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\n    var newFilename = \"images/\".concat(date, \"-\").concat(randomString, \"-\").concat(cleanFileName);\n    return newFilename.substring(0, 60);\n  };\n\n  return {\n    s3State: s3State,\n    setS3State: setS3State,\n    formatFilename: formatFilename,\n    uploadToS3: uploadToS3\n  };\n};\n\n_s(useS3Upload, \"dtIqyDL00nqLXwMghUpeK2k8B2M=\");","map":{"version":3,"sources":["D:/Programming/Trabajo/Javascript/MGRN/EcommercePointi/client/hooks/useS3Upload.js"],"names":["React","useState","axios","moment","useS3Upload","name","file","s3State","setS3State","uploadToS3","signedRequest","options","headers","type","put","res","formatFilename","filename","date","format","randomString","Math","random","toString","substring","cleanFileName","toLowerCase","replace","newFilename"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACCH,QAAQ,CAAC;AACnCI,IAAAA,IAAI,EAAG,EAD4B;AAEnCC,IAAAA,IAAI,EAAG;AAF4B,GAAD,CADT;AAAA,MACtBC,OADsB;AAAA,MACbC,UADa;;AAK7B,MAAMC,UAAU;AAAA,wEAAG,iBAAOH,IAAP,EAAaI,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,OADS,GACC;AACZC,gBAAAA,OAAO,EAAE;AACT,kCAAgBN,IAAI,CAACO,IADZ;AAET,kDAAiC,cAFxB;AAGT,iDAA+B,GAHtB;AAIT,kDAAgC;AAJvB;AADG,eADD;AAAA;AAAA,qBASGX,KAAK,CAACY,GAAN,CAAUJ,aAAV,EAAyBJ,IAAzB,EAA+BK,OAA/B,CATH;;AAAA;AASTI,cAAAA,GATS;AAAA,+CAURA,GAVQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVN,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAaA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI;AAC/B,QAAMC,IAAI,GAAGf,MAAM,GAAGgB,MAAT,CAAgB,UAAhB,CAAb;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,MAAL,GAClBC,QADkB,CACT,EADS,EAElBC,SAFkB,CAER,CAFQ,EAEL,CAFK,CAArB;AAGA,QAAMC,aAAa,GAAGR,QAAQ,CAACS,WAAT,GAAuBC,OAAvB,CAA+B,YAA/B,EAA6C,GAA7C,CAAtB;AACA,QAAMC,WAAW,oBAAaV,IAAb,cAAqBE,YAArB,cAAqCK,aAArC,CAAjB;AACA,WAAOG,WAAW,CAACJ,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,CAAP;AACD,GARH;;AAUF,SAAO;AACLjB,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,UAAU,EAAVA,UAFK;AAGLQ,IAAAA,cAAc,EAAdA,cAHK;AAILP,IAAAA,UAAU,EAAVA;AAJK,GAAP;AAMD,CAlCM;;GAAML,W","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nexport const useS3Upload = () => {\r\n    const [s3State, setS3State] = useState({\r\n        name : \"\",\r\n        file : \"\"\r\n    });\r\n    const uploadToS3 = async (file, signedRequest) => {\r\n        const options = {\r\n            headers: {\r\n            \"Content-Type\": file.type,\r\n            \"Access-Control-Allow-Headers\" : \"Content-Type\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\"\r\n            }\r\n        };\r\n        const res = await axios.put(signedRequest, file, options);\r\n        return res;\r\n    };\r\n    \r\n    const formatFilename = filename => {\r\n        const date = moment().format(\"YYYYMMDD\");\r\n        const randomString = Math.random()\r\n          .toString(36)\r\n          .substring(2, 7);\r\n        const cleanFileName = filename.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\r\n        const newFilename = `images/${date}-${randomString}-${cleanFileName}`;\r\n        return newFilename.substring(0, 60);\r\n      };\r\n    \r\n  return {\r\n    s3State,\r\n    setS3State,\r\n    formatFilename,\r\n    uploadToS3\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}