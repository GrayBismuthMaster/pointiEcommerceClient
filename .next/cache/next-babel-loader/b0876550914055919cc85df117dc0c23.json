{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\MGRN\\\\EcommercePointi\\\\client\\\\components\\\\pedidos\\\\AsignarProductos.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nimport PedidoContext from '../../context/pedidos/PedidoContext';\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos{\n        obtenerProductos{\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\nconst AsignarProductos = () => {\n  const {\n    0: producto,\n    1: setProductos\n  } = useState([]); //Context e pedidos\n\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    agregarProductos\n  } = pedidoContext; //Consulta a la bsae de datos\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PRODUCTOS);\n  useEffect(() => {\n    agregarProductos(producto);\n    return () => {};\n  }, [producto]);\n  if (loading) return null;\n  const {\n    obtenerProductos\n  } = data;\n\n  const seleccionarProductos = productos => {\n    setProductos(productos);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    isMulti: true,\n    onChange: option => seleccionarProductos(option),\n    getOptionValue: opciones => opciones.id,\n    getOptionLabel: opciones => `${opciones.nombre} - ${opciones.existencia} Disponibles`,\n    placeholder: 'Seleccione los productos',\n    noOptionsMessage: \"No hay resultados\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default AsignarProductos;","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/components/pedidos/AsignarProductos.js"],"names":["React","useContext","useEffect","useState","Select","gql","useQuery","PedidoContext","OBTENER_PRODUCTOS","AsignarProductos","producto","setProductos","pedidoContext","agregarProductos","data","loading","error","obtenerProductos","seleccionarProductos","productos","option","opciones","id","nombre","existencia"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,gBAA5B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,MAAMC,iBAAiB,GAAGH,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAUA,MAAMI,gBAAgB,GAAG,MAAM;AAE3B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA2BR,QAAQ,CAAC,EAAD,CAAzC,CAF2B,CAI3B;;AACA,QAAMS,aAAa,GAAGX,UAAU,CAACM,aAAD,CAAhC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAqBD,aAA3B,CAN2B,CAQ3B;;AACA,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBV,QAAQ,CAACE,iBAAD,CAAvC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,gBAAgB,CAACH,QAAD,CAAhB;AACF,WAAO,MAAM,CAEZ,CAFD;AAGD,GALQ,EAKP,CAACA,QAAD,CALO,CAAT;AAOA,MAAIK,OAAJ,EAAa,OAAO,IAAP;AACb,QAAM;AAACE,IAAAA;AAAD,MAAqBH,IAA3B;;AAEA,QAAMI,oBAAoB,GAAIC,SAAD,IAAa;AACtCR,IAAAA,YAAY,CAACQ,SAAD,CAAZ;AACH,GAFD;;AAGF,SACE,4BACI;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI,MAAC,MAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,OAAO,EAAIF,gBAFf;AAGI,IAAA,OAAO,MAHX;AAII,IAAA,QAAQ,EAAGG,MAAD,IAAUF,oBAAoB,CAACE,MAAD,CAJ5C;AAKI,IAAA,cAAc,EAAKC,QAAD,IAAYA,QAAQ,CAACC,EAL3C;AAMI,IAAA,cAAc,EAAKD,QAAD,IAAa,GAAEA,QAAQ,CAACE,MAAO,MAAKF,QAAQ,CAACG,UAAW,cAN9E;AAOI,IAAA,WAAW,EAAI,0BAPnB;AAQI,IAAA,gBAAgB,EAAI,mBARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAeD,CAvCD;;AAyCA,eAAef,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport Select from 'react-select'\r\nimport {gql, useQuery} from '@apollo/client'\r\nimport PedidoContext from '../../context/pedidos/PedidoContext'\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\nconst AsignarProductos = () => {\r\n\r\n    const [producto, setProductos] = useState([]);\r\n    \r\n    //Context e pedidos\r\n    const pedidoContext = useContext(PedidoContext);\r\n    const {agregarProductos} = pedidoContext;\r\n\r\n    //Consulta a la bsae de datos\r\n    const {data, loading, error} = useQuery(OBTENER_PRODUCTOS);\r\n    \r\n    useEffect(() => {\r\n        agregarProductos(producto);\r\n      return () => {\r\n        \r\n      }\r\n    },[producto])\r\n    \r\n    if (loading) return null;\r\n    const {obtenerProductos} = data;\r\n\r\n    const seleccionarProductos = (productos)=>{\r\n        setProductos(productos)\r\n    }\r\n  return (\r\n    <>\r\n        <p className='mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold'>2.- Selecciona o busca los productos</p>\r\n        <Select\r\n            className='mt-3'\r\n            options = {obtenerProductos}\r\n            isMulti\r\n            onChange={(option)=>seleccionarProductos(option)}\r\n            getOptionValue = {(opciones)=>opciones.id}\r\n            getOptionLabel = {(opciones)=>`${opciones.nombre} - ${opciones.existencia} Disponibles`}\r\n            placeholder = {'Seleccione los productos'}\r\n            noOptionsMessage = {\"No hay resultados\"}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AsignarProductos"]},"metadata":{},"sourceType":"module"}