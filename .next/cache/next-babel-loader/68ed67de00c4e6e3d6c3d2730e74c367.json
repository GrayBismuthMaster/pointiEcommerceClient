{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Trabajo\\\\MGRN\\\\EcommercePointi\\\\client\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nconst AUTENTICAR_USUARIO = gql`\n    mutation autenticarUsuario($input:AutenticarInput)\n    {\n        autenticarUsuario(input:$input)\n        {\n            token\n        }\n    }\n`;\n\nconst Login = () => {\n  //Routing \n  const router = useRouter(); //State para el mensaje\n\n  const {\n    0: mensaje,\n    1: guardarMensaje\n  } = useState(null); //Mutation para crear nuevos usuarios en Apollo\n  //Array Destructuring para el retorno del mutation de gql\n\n  const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es válido').required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio')\n    }),\n    onSubmit: async valores => {\n      const {\n        email,\n        password\n      } = valores;\n      console.log(valores);\n\n      try {\n        const {\n          data\n        } = await autenticarUsuario({\n          variables: {\n            input: {\n              email,\n              password\n            }\n          }\n        });\n        console.log(data); //Usuario autenticado correctamente\n\n        guardarMensaje('Autenticando...'); //En data está el retorno del mutation \n        //Guardar el token en localStorage\n\n        const {\n          token\n        } = data.autenticarUsuario;\n        localStorage.setItem('token', token); //redireccionar hacia clientes\n\n        setTimeout(() => {\n          guardarMensaje(null);\n          router.push('/home');\n        }, 3000); //Redirigir Usuario para iniciar sesión\n      } catch (error) {\n        console.log(error);\n        guardarMensaje(error.message.replace('GraphQL error : ', ''));\n        setTimeout(() => {\n          guardarMensaje(error);\n        }, 3000);\n      }\n    }\n  }); //Mostrar mensjae\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"flex justify-start mt-5 flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-white font-light justify-self-center ml-10 my-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Login\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md ml-8 px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\" //Va revisando el cambio que se haga y lo coloca en el estado\n    ,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 35\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 35\n    }\n  }, \" \", formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900\",\n    value: \"Iniciar Sesi\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }), __jsx(Link, {\n    href: 'nuevacuenta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900 justify-center content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, \"Registrarse\")))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Programming/Trabajo/MGRN/EcommercePointi/client/pages/login.js"],"names":["React","useState","Layout","useFormik","Yup","gql","useMutation","useRouter","Link","AUTENTICAR_USUARIO","Login","router","mensaje","guardarMensaje","autenticarUsuario","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","console","log","data","variables","input","token","localStorage","setItem","setTimeout","push","error","message","replace","mostrarMensaje","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport Layout from '../components/Layout'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {gql, useMutation} from '@apollo/client'\r\nimport {useRouter} from 'next/router'\r\nimport Link from 'next/link';\r\nconst AUTENTICAR_USUARIO = gql`\r\n    mutation autenticarUsuario($input:AutenticarInput)\r\n    {\r\n        autenticarUsuario(input:$input)\r\n        {\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nconst Login = () => {\r\n    //Routing \r\n    const router = useRouter();\r\n     //State para el mensaje\r\n     const [mensaje, guardarMensaje] = useState(null);\r\n     \r\n\r\n    //Mutation para crear nuevos usuarios en Apollo\r\n    //Array Destructuring para el retorno del mutation de gql\r\n    const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password : ''\r\n        },\r\n        validationSchema : Yup.object({\r\n            email: Yup.string().email('El email no es válido').required('El email no puede ir vacio'),\r\n            password: Yup.string()\r\n                    .required('El password es obligatorio')           \r\n        }), \r\n        onSubmit: async valores => {\r\n            const {email,password} =valores\r\n            console.log(valores)\r\n            try {\r\n                const {data} = await autenticarUsuario({\r\n                    variables: {\r\n                        input: {\r\n                            email,\r\n                            password\r\n                        }\r\n                    }\r\n                })\r\n                console.log(data)\r\n                //Usuario autenticado correctamente\r\n                guardarMensaje('Autenticando...');\r\n                //En data está el retorno del mutation \r\n                //Guardar el token en localStorage\r\n                const {token} = data.autenticarUsuario;\r\n                localStorage.setItem('token',token)\r\n                //redireccionar hacia clientes\r\n                setTimeout(()=>{\r\n                    guardarMensaje(null)\r\n                    router.push('/home')\r\n                }, 3000)\r\n               //Redirigir Usuario para iniciar sesión\r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n                guardarMensaje(error.message.replace('GraphQL error : ', ''))\r\n                setTimeout(()=>{\r\n                        guardarMensaje(error)\r\n                }, 3000)\r\n            }\r\n\r\n        }\r\n    })\r\n     //Mostrar mensjae\r\n     const mostrarMensaje = () => {\r\n        return(\r\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\r\n                <p>{mensaje}</p>\r\n            </div>       \r\n        )\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"flex justify-start mt-5 flex-col\">\r\n                    \r\n                <h1 className=\"text-2xl text-white font-light justify-self-center ml-10 my-8\">Login</h1>\r\n                {mensaje && mostrarMensaje()}\r\n                    <div className=\"w-full max-w-sm\" >\r\n                        <form \r\n                            className=\"bg-white rounded shadow-md ml-8 px-8 pt-6 pb-8 mb-4\"\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                        \r\n                            <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email Usuario\"\r\n                                    //Va revisando el cambio que se haga y lo coloca en el estado\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value = {formik.values.email}\r\n                                />\r\n                            </div>\r\n                            { formik.touched.email && formik.errors.email ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.email}</p>  \r\n                                </div>\r\n                            ): null}\r\n\r\n                            <div className=\"mb-4\">\r\n                                <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"password\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password Usuario\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value = {formik.values.password}\r\n                                />\r\n                            </div>\r\n\r\n                            { formik.touched.password && formik.errors.password ? (\r\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                                  <p className=\"font-bold\">Error</p>\r\n                                  <p> {formik.errors.password}</p>  \r\n                                </div>\r\n                            ): null}   \r\n\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900\" \r\n                                value=\"Iniciar Sesión\"\r\n                            />\r\n                            \r\n                            <Link\r\n                                href={'nuevacuenta'}\r\n                            >\r\n                                <div \r\n                                    className=\"bg-gray-800 w-full mt-5 p-2 text-white hover:bg-gray-900 justify-center content-center\" \r\n                                >\r\n                                    Registrarse\r\n                                </div>\r\n                            </Link>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n           \r\n            </Layout>\r\n        </>\r\n      );\r\n}\r\n \r\nexport default Login;"]},"metadata":{},"sourceType":"module"}