{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\components\\\\Producto.js\";\nvar __jsx = React.createElement;\nimport { gql, useMutation } from '@apollo/client';\nimport router from 'next/router';\nimport React from 'react';\nimport Swal from 'sweetalert2';\nconst ELIMINAR_PRODUCTO = gql`\n    mutation eliminarProducto($id : ID!) {\n        eliminarProducto(id : $id)\n    }\n`;\nconst OBTENER_PRODUCTOS = gql`\n    query obtenerProductos{\n        obtenerProductos{\n            id\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\nconst Producto = ({\n  producto\n}) => {\n  const {\n    id,\n    nombre,\n    precio,\n    existencia\n  } = producto; //Mutation para eliminar productos\n\n  const [eliminarProducto] = useMutation(ELIMINAR_PRODUCTO, {\n    update(cache) {\n      const {\n        obtenerProductos\n      } = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      });\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: obtenerProductos.filter(productoActual => productoActual.id !== id)\n        }\n      });\n    }\n\n  });\n\n  const confirmarEliminarProducto = id => {\n    Swal.fire({\n      title: `¿Estás seguro de eliminar el producto ${nombre}?`,\n      text: \"No se podrá deshacer esta acción\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, bórralo!',\n      cancelButtonText: 'No, cancélalo'\n    }).then(async result => {\n      if (result.isConfirmed) {\n        try {\n          //Eliminar por id \n          //Data es la respuesta del servidor\n          const {\n            data\n          } = await eliminarProducto({\n            variables: {\n              id\n            }\n          });\n          console.log(data); //Mostrar una alerta\n\n          Swal.fire('Producto ELiminado!', data.eliminarProducto, 'success');\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  };\n\n  const editarProducto = () => {\n    router.push({\n      pathname: \"/editarproducto/[id]\",\n      query: {}\n    });\n  };\n\n  return __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, nombre), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, existencia, \" Piezas\"), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"$ \", precio), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-red-800 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: () => confirmarEliminarProducto(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Eliminar\", __jsx(\"svg\", {\n    className: \"w-4 h-4 ml-2\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 136\n    }\n  })))), __jsx(\"td\", {\n    className: \"border px-4 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-green-600 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: () => editarProducto(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Editar\", __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"h-4 w-4 ml-2\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default Producto;","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/components/Producto.js"],"names":["gql","useMutation","router","React","Swal","ELIMINAR_PRODUCTO","OBTENER_PRODUCTOS","Producto","producto","id","nombre","precio","existencia","eliminarProducto","update","cache","obtenerProductos","readQuery","query","writeQuery","data","filter","productoActual","confirmarEliminarProducto","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","variables","console","log","error","editarProducto","push","pathname"],"mappings":"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","sourcesContent":["import { gql, useMutation } from '@apollo/client';\r\nimport router from 'next/router';\r\nimport React from 'react'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ELIMINAR_PRODUCTO = gql`\r\n    mutation eliminarProducto($id : ID!) {\r\n        eliminarProducto(id : $id)\r\n    }\r\n`\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\nconst Producto = ({producto}) => {\r\n    const {id, nombre, precio, existencia} = producto;\r\n\r\n    //Mutation para eliminar productos\r\n    const [eliminarProducto] = useMutation(ELIMINAR_PRODUCTO,{\r\n        update(cache){\r\n            const {obtenerProductos} = cache.readQuery({\r\n                query : OBTENER_PRODUCTOS\r\n            });\r\n            cache.writeQuery({\r\n                query : OBTENER_PRODUCTOS,\r\n                data : {\r\n                    obtenerProductos: obtenerProductos.filter(productoActual => productoActual.id !== id)\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    const confirmarEliminarProducto = id => {\r\n        Swal.fire({\r\n            title: `¿Estás seguro de eliminar el producto ${nombre}?`,\r\n            text: \"No se podrá deshacer esta acción\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, bórralo!',\r\n            cancelButtonText:'No, cancélalo'\r\n          }).then(async (result) => {\r\n            if (result.isConfirmed) \r\n            {\r\n                try {\r\n                    //Eliminar por id \r\n                    //Data es la respuesta del servidor\r\n                    const{data} = await eliminarProducto({\r\n                        variables:{\r\n                            id \r\n                        }\r\n                    })\r\n                    console.log(data)\r\n                    //Mostrar una alerta\r\n                    Swal.fire(\r\n                        'Producto ELiminado!',\r\n                        data.eliminarProducto,\r\n                        'success'\r\n                    )   \r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n          })\r\n    }\r\n\r\n    const editarProducto = ()=>{\r\n        router.push({\r\n            pathname : \"/editarproducto/[id]\",\r\n            query : {}\r\n        })\r\n    }\r\n  return (\r\n    <tr>\r\n        <td className='border px-4 py-2'>{nombre}</td>\r\n        <td className='border px-4 py-2'>{existencia} Piezas</td>\r\n        <td className='border px-4 py-2'>$ {precio}</td>\r\n        <td className='border px-4 py-2'>\r\n            <button type=\"button\"\r\n                className=\"flex justify-center items-center bg-red-800 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\"\r\n                onClick = {()=>confirmarEliminarProducto(id)}\r\n            >  \r\n                Eliminar       \r\n                <svg className=\"w-4 h-4 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\r\n            </button>\r\n        </td>\r\n\r\n        <td className='border px-4 py-2'>\r\n            <button type=\"button\"\r\n                className=\"flex justify-center items-center bg-green-600 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\"\r\n                onClick = {()=>editarProducto(id)}\r\n            >\r\n                Editar\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 ml-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n                </svg>    \r\n            </button>\r\n        </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Producto"]},"metadata":{},"sourceType":"module"}