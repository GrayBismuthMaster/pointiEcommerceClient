{"ast":null,"code":"import _taggedTemplateLiteral from \"D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\components\\\\pedidos\\\\AsignarProductos.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProductos{\\n        obtenerProductos{\\n            id\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { gql, useQuery } from '@apollo/client';\nvar OBTENER_PRODUCTOS = gql(_templateObject());\n\nvar AsignarProductos = function AsignarProductos() {\n  _s();\n\n  //Consulta a la bsae de datos\n  var _useQuery = useQuery(OBTENER_PRODUCTOS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return null;\n  var obtenerProductos = data.obtenerProductos;\n\n  var seleccionarProductos = function seleccionarProductos() {};\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    onChange: function onChange(option) {\n      return seleccionarProductos(option);\n    },\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return \"\".concat(opciones.nombre, \" - \").concat(opciones.existencia, \" DISPONIBLES\");\n    },\n    placeholder: 'Seleccione los productos',\n    noOptionsMessage: \"No hay resultados\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(AsignarProductos, \"RsAoF0jGW8x/4pnnopXB/YWtfZ8=\", false, function () {\n  return [useQuery];\n});\n\n_c = AsignarProductos;\nexport default AsignarProductos;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignarProductos\");","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/components/pedidos/AsignarProductos.js"],"names":["React","Select","gql","useQuery","OBTENER_PRODUCTOS","AsignarProductos","data","loading","error","obtenerProductos","seleccionarProductos","option","opciones","id","nombre","existencia"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,gBAA5B;AACA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;;AAUA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC3B;AAD2B,kBAEIF,QAAQ,CAACC,iBAAD,CAFZ;AAAA,MAEpBE,IAFoB,aAEpBA,IAFoB;AAAA,MAEdC,OAFc,aAEdA,OAFc;AAAA,MAELC,KAFK,aAELA,KAFK;;AAG3B,MAAID,OAAJ,EAAa,OAAO,IAAP;AAHc,MAIpBE,gBAJoB,GAIAH,IAJA,CAIpBG,gBAJoB;;AAK3B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAI,CAEhC,CAFD;;AAGF,SACE,4BACI;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI,MAAC,MAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,OAAO,EAAID,gBAFf;AAII,IAAA,QAAQ,EAAE,kBAACE,MAAD;AAAA,aAAUD,oBAAoB,CAACC,MAAD,CAA9B;AAAA,KAJd;AAKI,IAAA,cAAc,EAAI,wBAACC,QAAD;AAAA,aAAYA,QAAQ,CAACC,EAArB;AAAA,KALtB;AAMI,IAAA,cAAc,EAAI,wBAACD,QAAD;AAAA,uBAAeA,QAAQ,CAACE,MAAxB,gBAAoCF,QAAQ,CAACG,UAA7C;AAAA,KANtB;AAOI,IAAA,WAAW,EAAI,0BAPnB;AAQI,IAAA,gBAAgB,EAAI,mBARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAeD,CAvBD;;GAAMV,gB;UAE6BF,Q;;;KAF7BE,gB;AAyBN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport Select from 'react-select'\r\nimport {gql, useQuery} from '@apollo/client'\r\nconst OBTENER_PRODUCTOS = gql`\r\n    query obtenerProductos{\r\n        obtenerProductos{\r\n            id\r\n            nombre\r\n            precio\r\n            existencia\r\n        }\r\n    }\r\n`\r\nconst AsignarProductos = () => {\r\n    //Consulta a la bsae de datos\r\n    const {data, loading, error} = useQuery(OBTENER_PRODUCTOS);\r\n    if (loading) return null;\r\n    const {obtenerProductos} = data;\r\n    const seleccionarProductos = ()=>{\r\n\r\n    }\r\n  return (\r\n    <>\r\n        <p className='mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold'>2.- Selecciona o busca los productos</p>\r\n        <Select\r\n            className='mt-3'\r\n            options = {obtenerProductos}\r\n            \r\n            onChange={(option)=>seleccionarProductos(option)}\r\n            getOptionValue = {(opciones)=>opciones.id}\r\n            getOptionLabel = {(opciones)=>`${opciones.nombre} - ${opciones.existencia} DISPONIBLES`}\r\n            placeholder = {'Seleccione los productos'}\r\n            noOptionsMessage = {\"No hay resultados\"}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AsignarProductos"]},"metadata":{},"sourceType":"module"}