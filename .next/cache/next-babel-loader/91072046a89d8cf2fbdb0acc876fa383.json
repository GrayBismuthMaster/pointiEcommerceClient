{"ast":null,"code":"import _regeneratorRuntime from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"D:/Programming/Trabajo/MGRN/EcommercePointi/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      query obtenerClientesVendedor {\\n        obtenerClientesVendedor{\\n          id\\n          nombre\\n          apellido\\n          empresa\\n          email\\n        }\\n      }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation eliminarCliente($id:ID!){\\n        eliminarCliente(id:$id)\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport { gql, useMutation } from '@apollo/client';\nimport Router from 'next/router';\nvar ELIMINAR_CLIENTE = gql(_templateObject());\nvar OBTENER_CLIENTES_USUARIO = gql(_templateObject2());\n\nvar Cliente = function Cliente(_ref) {\n  var cliente = _ref.cliente;\n\n  //Mutation para eliminar cliente\n  var _useMutation = useMutation(ELIMINAR_CLIENTE, {\n    update: function update(cache) {\n      //Obtener una copia del objeto de cache\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_CLIENTES_USUARIO\n      }),\n          obtenerClientesVendedor = _cache$readQuery.obtenerClientesVendedor; //Reescribir el caché \n\n\n      cache.writeQuery({\n        query: OBTENER_CLIENTES_USUARIO,\n        data: {\n          obtenerClientesVendedor: obtenerClientesVendedor.filter(function (clienteActual) {\n            return clienteActual.id !== id;\n          })\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      eliminarCliente = _useMutation2[0]; //Destructuración  cliente\n\n\n  var nombre = cliente.nombre,\n      apellido = cliente.apellido,\n      empresa = cliente.empresa,\n      email = cliente.email,\n      id = cliente.id; //Elimina un cliente\n\n  var confirmarEliminarCliente = function confirmarEliminarCliente(id) {\n    Swal.fire({\n      title: \"\\xBFEst\\xE1s seguro de eliminar a \".concat(nombre, \"?\"),\n      text: \"No se podrá deshacer esta acción\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, bórralo!',\n      cancelButtonText: 'No, cancélalo'\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(result) {\n        var _yield$eliminarClient, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!result.isConfirmed) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return eliminarCliente({\n                  variables: {\n                    id: id\n                  }\n                });\n\n              case 4:\n                _yield$eliminarClient = _context.sent;\n                data = _yield$eliminarClient.data;\n                console.log(data); //Mostrar una alerta\n\n                Swal.fire('ELiminado!', data.eliminarCliente, 'success');\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  var editarCliente = function editarCliente() {\n    Router.push({\n      pathname: \"/editarCliente/[id]\",\n      query: {\n        id: id\n      }\n    });\n  };\n\n  return __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, nombre, \" \", apellido), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, empresa), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, email), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-red-800 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: function onClick() {\n      return confirmarEliminarCliente(id);\n    }\n  }, \"Eliminar\", __jsx(\"svg\", {\n    className: \"w-4 h-4 ml-2\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n  })))), __jsx(\"td\", {\n    className: \"border px-4 py-2\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"flex justify-center items-center bg-green-600 py-2 px-4 w-full text-white rounded text-xs uppercase font-bold\",\n    onClick: function onClick() {\n      return editarCliente(id);\n    }\n  }, \"Editar\", __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"h-4 w-4 ml-2\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n  })))));\n};\n\nexport default Cliente;","map":null,"metadata":{},"sourceType":"module"}