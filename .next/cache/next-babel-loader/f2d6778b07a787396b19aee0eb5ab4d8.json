{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport { gql, useQuery } from '@apollo/client';\nimport { useRouter } from 'next/router';\nconst OBTENER_CLIENTES_USUARIO = gql`\n      query obtenerClientesVendedor {\n        obtenerClientesVendedor{\n          id\n          nombre\n          apellido\n          empresa\n          email\n        }\n      }\n`;\n\nfunction Index() {\n  try {\n    const router = useRouter();\n    const {\n      data,\n      loading,\n      error\n    } = useQuery(OBTENER_CLIENTES_USUARIO);\n    console.log(data);\n    console.log(loading);\n    console.log(error);\n    if (loading) return 'Cargando....';\n\n    if (!data.obtenerClientesVendedor) {\n      throw 'fdf';\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"text-2xl text-gray-800 font-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Clientes\"), __jsx(\"table\", {\n      className: \"table-auto shadow-md mt-10 w-full w-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(\"thead\", {\n      className: \"bg-gray-800\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"tr\", {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, __jsx(\"th\", {\n      className: \"w-1/5 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Nombre\"), __jsx(\"th\", {\n      className: \"w-1/5 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Empresa\"), __jsx(\"th\", {\n      className: \"w-1/5 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Email\"))), __jsx(\"tbody\", {\n      className: \"bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, data.obtenerClientesVendedor.map(cliente => __jsx(\"tr\", {\n      key: cliente.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, cliente.nombre, \" \", cliente.apellido), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, cliente.empresa), __jsx(\"td\", {\n      className: \"border px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, cliente.email)))))));\n  } catch (error) {\n    const router = useRouter();\n    return router.push('/login');\n  }\n}\n\nexport default Index;","map":{"version":3,"sources":["D:/Cursos/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/index.js"],"names":["Layout","gql","useQuery","useRouter","OBTENER_CLIENTES_USUARIO","Index","router","data","loading","error","console","log","obtenerClientesVendedor","map","cliente","id","nombre","apellido","empresa","email","push"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAAQC,GAAR,EAAaC,QAAb,QAA4B,gBAA5B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,MAAMC,wBAAwB,GAAGH,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYE,SAASI,KAAT,GAAiB;AACjB,MAAI;AAEF,UAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAA2BP,QAAQ,CAACE,wBAAD,CAAzC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAGD,OAAH,EAAY,OAAO,cAAP;;AACZ,QAAG,CAACD,IAAI,CAACK,uBAAT,EAAiC;AAC/B,YAAM,KAAN;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,MAAA,SAAS,EAAC,wCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,EASE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,IAAI,CAACK,uBAAL,CAA6BC,GAA7B,CAAiCC,OAAO,IACvC;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,OAAO,CAACE,MAA1C,OAAmDF,OAAO,CAACG,QAA3D,CADF,EAEE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCH,OAAO,CAACI,OAA1C,CAFF,EAGE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCJ,OAAO,CAACK,KAA1C,CAHF,CADD,CADL,CATF,CAFF,CADF,CADF;AA+BD,GA1CD,CA0CE,OAAOV,KAAP,EAAc;AACd,UAAMH,MAAM,GAAGH,SAAS,EAAxB;AACA,WAAOG,MAAM,CAACc,IAAP,CAAY,QAAZ,CAAP;AACD;AAGF;;AACD,eAAef,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport {gql, useQuery} from '@apollo/client'\nimport {useRouter} from 'next/router'\n\nconst OBTENER_CLIENTES_USUARIO = gql`\n      query obtenerClientesVendedor {\n        obtenerClientesVendedor{\n          id\n          nombre\n          apellido\n          empresa\n          email\n        }\n      }\n`;\n\n  function Index() {\n  try {\n    \n    const router = useRouter();\n    const { data, loading, error } = useQuery(OBTENER_CLIENTES_USUARIO);\n    console.log(data);\n    console.log(loading);\n    console.log(error);\n    if(loading) return 'Cargando....';\n    if(!data.obtenerClientesVendedor){\n      throw('fdf')\n    }   \n    return (\n      <div>\n        <Layout>\n          <h1 className=\"text-2xl text-gray-800 font-light\">Clientes</h1>\n          <table className='table-auto shadow-md mt-10 w-full w-lg'>\n            <thead className='bg-gray-800'>\n              <tr className='text-white'>\n                <th className='w-1/5 py-2'>Nombre</th>\n                <th className='w-1/5 py-2'>Empresa</th>\n                <th className='w-1/5 py-2'>Email</th>\n              </tr>\n            </thead>\n  \n            <tbody className='bg-white'>\n                {data.obtenerClientesVendedor.map(cliente => (\n                  <tr key={cliente.id}>\n                    <td className='border px-4 py-2'>{cliente.nombre} {cliente.apellido}</td>\n                    <td className='border px-4 py-2'>{cliente.empresa}</td>\n                    <td className='border px-4 py-2'>{cliente.email}</td>\n                  </tr>\n                ))}\n    \n              \n              \n            </tbody>\n          </table>\n        </Layout>\n  \n      </div>\n  \n    );\n  } catch (error) {\n    const router = useRouter();\n    return router.push('/login')\n  }\n  \n  \n}\nexport default Index"]},"metadata":{},"sourceType":"module"}