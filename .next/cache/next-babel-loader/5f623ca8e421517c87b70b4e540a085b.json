{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\FrontEnd Javascript\\\\Next\\\\React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL\\\\Ejercicios\\\\cliente\\\\clientecrm\\\\pages\\\\editarCliente\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/Layout';\nimport { useQuery, gql } from '@apollo/client';\nimport { Formik } from 'formik';\nconst OBTENER_CLIENTE = gql`\n  query obtenerCliente($id : ID!){\n    obtenerCliente(id: $id){\n      nombre \n      apellido\n      email\n      telefono \n      empresa\n    }\n  }\n`;\n\nconst EditarCliente = () => {\n  const router = useRouter();\n  const {\n    query: {\n      id\n    }\n  } = router;\n  console.log(id); //Consultar para obtener el cliente\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return \"cargando...\";\n  console.log(data.obtenerCliente);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Editar Cliente\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(Formik, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\" // onSubmit={formik.handleSubmit}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    // onChange={formik.handleChange}\n    // onBlur={formik.handleBlur}\n    // value = {formik.values.nombre}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    // onChange={formik.handleChange}\n    // onBlur={formik.handleBlur}\n    // value = {formik.values.apellido}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  }, \"Empresa\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"empresa\",\n    type: \"text\",\n    placeholder: \"Empresa Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    // onChange={formik.handleChange}\n    // onBlur={formik.handleBlur}\n    // value = {formik.values.empresa}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 27\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    // onChange={formik.handleChange}\n    // onBlur={formik.handleBlur}\n    // value = {formik.values.email}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 27\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 27\n    }\n  }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"telefono\",\n    type: \"tel\",\n    placeholder: \"Tel\\xE9fono Cliente\" //Va revisando el cambio que se haga y lo coloca en el estado\n    // onChange={formik.handleChange}\n    // onBlur={formik.handleBlur}\n    // value = {formik.values.telefono}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 27\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Registrar Cliente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nexport default EditarCliente;","map":{"version":3,"sources":["D:/Cursos/FrontEnd Javascript/Next/React Avanzado Fullstack Next.js, Apollo, MongoDB y GraphQL/Ejercicios/cliente/clientecrm/pages/editarCliente/[id].js"],"names":["React","useRouter","Layout","useQuery","gql","Formik","OBTENER_CLIENTE","EditarCliente","router","query","id","console","log","data","loading","error","variables","obtenerCliente"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Layout from '../../components/Layout';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport {Formik} from 'formik'\r\nconst OBTENER_CLIENTE = gql`\r\n  query obtenerCliente($id : ID!){\r\n    obtenerCliente(id: $id){\r\n      nombre \r\n      apellido\r\n      email\r\n      telefono \r\n      empresa\r\n    }\r\n  }\r\n`\r\n\r\nconst EditarCliente = () => {\r\n    const router = useRouter();\r\n    const {query : {id}} = router;\r\n    console.log(id)\r\n    //Consultar para obtener el cliente\r\n    const {data, loading, error} = useQuery(OBTENER_CLIENTE, {\r\n      variables : {\r\n        id\r\n      }\r\n    });\r\n    if (loading) return \"cargando...\";\r\n\r\n    console.log(data.obtenerCliente)\r\n  return (\r\n    <Layout>\r\n      <h1 className='text-2xl text-gray-800 font-light'>Editar Cliente</h1>\r\n      {/* {mensaje && mostrarMensaje()} */}\r\n      <div className='flex justify-center mt-5'>\r\n          <div className='w-full max-w-lg'>\r\n            <Formik>\r\n              <form\r\n                  className='bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4'\r\n                  // onSubmit={formik.handleSubmit}\r\n              >\r\n                  <div className=\"mb-4\">\r\n                          <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"nombre\">\r\n                              Nombre\r\n                          </label>\r\n                          <input\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"nombre\"\r\n                              type=\"text\"\r\n                              placeholder=\"Nombre Cliente\"\r\n                              //Va revisando el cambio que se haga y lo coloca en el estado\r\n                              \r\n                                // onChange={formik.handleChange}\r\n                                // onBlur={formik.handleBlur}\r\n                                // value = {formik.values.nombre}\r\n                          />\r\n                  </div>\r\n                  {/* { formik.touched.nombre && formik.errors.nombre ? (\r\n                          <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                            <p className=\"font-bold\">Error</p>\r\n                            <p> {formik.errors.nombre}</p>  \r\n                          </div>\r\n                      ): null\r\n                  } */}\r\n\r\n                  <div className=\"mb-4\">\r\n                          <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"apellido\">\r\n                              Apellido\r\n                          </label>\r\n                          <input\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"apellido\"\r\n                              type=\"text\"\r\n                              placeholder=\"Apellido Cliente\"\r\n                              //Va revisando el cambio que se haga y lo coloca en el estado\r\n                              \r\n                                // onChange={formik.handleChange}\r\n                                // onBlur={formik.handleBlur}\r\n                                // value = {formik.values.apellido}\r\n                          />\r\n                  </div>\r\n                  {/* { formik.touched.apellido && formik.errors.apellido ? (\r\n                          <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                            <p className=\"font-bold\">Error</p>\r\n                            <p> {formik.errors.apellido}</p>  \r\n                          </div>\r\n                      ): null\r\n                  } */}\r\n\r\n                  <div className=\"mb-4\">\r\n                          <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"empresa\">\r\n                              Empresa\r\n                          </label>\r\n                          <input\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"empresa\"\r\n                              type=\"text\"\r\n                              placeholder='Empresa Cliente'\r\n                              //Va revisando el cambio que se haga y lo coloca en el estado\r\n                              \r\n                                // onChange={formik.handleChange}\r\n                                // onBlur={formik.handleBlur}\r\n                                // value = {formik.values.empresa}\r\n                          />\r\n                  </div>\r\n                  {/* { formik.touched.empresa && formik.errors.empresa ? (\r\n                          <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                            <p className=\"font-bold\">Error</p>\r\n                            <p> {formik.errors.empresa}</p>  \r\n                          </div>\r\n                      ): null\r\n                  } */}\r\n                  <div className=\"mb-4\">\r\n                          <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"email\">\r\n                              Email\r\n                          </label>\r\n                          <input\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"email\"\r\n                              type=\"email\"\r\n                              placeholder='Email Cliente'\r\n                              //Va revisando el cambio que se haga y lo coloca en el estado\r\n                              \r\n                                // onChange={formik.handleChange}\r\n                                // onBlur={formik.handleBlur}\r\n                                // value = {formik.values.email}\r\n                          />\r\n                  </div>\r\n                  {/* { formik.touched.email && formik.errors.email ? (\r\n                          <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n                            <p className=\"font-bold\">Error</p>\r\n                            <p> {formik.errors.email}</p>  \r\n                          </div>\r\n                      ): null */}\r\n                  {/* } */}\r\n\r\n                  <div className=\"mb-4\">\r\n                          <label className='block text-gray-700 text-sm font-bold mb-2' htmlFor=\"telefono\">\r\n                              Teléfono\r\n                          </label>\r\n                          <input\r\n                              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                              id=\"telefono\"\r\n                              type=\"tel\"\r\n                              placeholder='Teléfono Cliente'\r\n                              //Va revisando el cambio que se haga y lo coloca en el estado\r\n                              \r\n                                // onChange={formik.handleChange}\r\n                                // onBlur={formik.handleBlur}\r\n                                // value = {formik.values.telefono}\r\n                          />\r\n                  </div>\r\n\r\n                  <input\r\n                      type='submit'\r\n                      className='bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900'\r\n                      value=\"Registrar Cliente\"\r\n                  />\r\n              </form>\r\n            </Formik>\r\n              \r\n          </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default EditarCliente"]},"metadata":{},"sourceType":"module"}